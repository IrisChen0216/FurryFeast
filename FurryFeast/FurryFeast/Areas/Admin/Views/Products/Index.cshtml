@{
	ViewData["Title"] = "Index";
	Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section Style{
	<style>
		.unState {
			background-color: gray;
		}

		.btnState {
			display: inline-block;
		}

		.drop {
			background-color: #ffedad;
			color: #3b3b3b;
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		}

			.drop:hover {
				background-color: #ffce78;
			}

		.btn-secondary:hover {
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		}

		input {
			outline-style: none;
			border: 1px solid #ccc;
			border-radius: 3px;
			padding-left: 5px;
			width: 100%;
			height: 30px;
		}
	</style>
}

<div class="container-fluid" id="app">
	<div class="row">
		<div class="col-12">
			<div class="card my-4">

				<div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
					<div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3 ">
						<h6 class="text-white text-capitalize ps-3">寵物商城商品管理</h6>
					</div>
				</div>
				<div class="row">


					<div class="dropdown mx-3 mt-2 col-1">
						<button class="btn btn-secondary dropdown-toggle drop" type="button" id="dropdownMenu2" data-bs-toggle="dropdown" aria-expanded="false">
							商品專區
						</button>
						<ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
							<li><button class="dropdown-item" type="button">全部商品</button></li>
							<li><button class="dropdown-item" type="button">鮮食商品</button></li>
							<li><button class="dropdown-item" type="button">狗狗商品</button></li>
							<li><button class="dropdown-item" type="button">貓咪商品</button></li>
						</ul>
					</div>
					<div class="dropdown mx-3 mt-2 col-1">
						<button class="btn btn-secondary dropdown-toggle drop" type="button" id="dropdownMenu2" data-bs-toggle="dropdown" aria-expanded="false">
							商品類別
						</button>
						<ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
							<li><button class="dropdown-item" type="button">全類別</button></li>
							<li><button class="dropdown-item" type="button">生活用品</button></li>
							<li><button class="dropdown-item" type="button">主食/零食</button></li>
						</ul>
					</div>

					@*<select>
					<option>全部商品</option>
					<option>鮮食專區</option>
					<option>狗狗專區</option>
					<option>貓咪專區</option>
					</select>

					<button class="btn bg-gradient-info mb-0 toast-btn">全部商品</button>*@
					<div class="btnState mx-3 mt-2 pr-10 col-3">

						<button class="btn bg-gradient-warning  mb-0 toast-btn">上架中</button>
						<button class="btn bg-gradient-danger  mb-0 toast-btn unState">未上架</button>
					</div>
					<div class="form-group  mt-2 col-2">
						@*新增按鍵*@
						<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop" v-on:click="showInsertPage">
							新增商品
						</button>
					</div>

					@*搜尋欄*@
					<div class="ms-md-auto mt-2 pe-md-3 d-flex align-items-center col-3 mx-3">
						<div class="input-group input-group-outline">
							<label class="form-label">Search Product...</label>
							<input type="text" class="form-control" v-model="keyword" @@keyup="productFilter">
						</div>
					</div>

				</div>

				<div class="card-body px-0 pb-2">
					<div class="table-responsive p-0">
						<table class="table align-items-center mb-0">
							<thead>
								<tr>
									<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">商品編號</th>
									<th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">商品名稱</th>
									<th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">商品售價</th>
									<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">上架狀態</th>
									<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">上架時間</th>
									<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">下架時間</th>
									<th class="text-secondary opacity-7"></th>
								</tr>
							</thead>
							<tbody>
								<tr v-for="item in showProducts" :key="item.backEndProduct.productId">

									<td class="align-middle text-center">
										<span class="text-secondary text-xs font-weight-bold">{{item.backEndProduct.productId}}</span>
									</td>
									<td>
										<div class="d-flex px-2 py-1">
											<div>
												<img :src="'data:image/png;base64,'+item.backEndPics[0]" class="avatar avatar-sm me-3 border-radius-lg" alt="user1">
											</div>
											<div class="d-flex flex-column justify-content-center">

												<a :href="'Details?id='+item.backEndProduct.productId">
													<h6 class="mb-0 text-sm">{{item.backEndProduct.productName}}</h6>
													<p class="text-xs text-secondary mb-0">{{item.backEndProduct.productAmount}}</p>
												</a>
											</div>
										</div>
									</td>
									<td>
										<p class="text-xs font-weight-bold mb-0">${{item.backEndProduct.productPrice}}</p>
										<p class="text-xs text-secondary mb-0">Organization</p>
									</td>
									<td class="align-middle text-center text-sm">
										@*<span class="badge badge-sm bg-gradient-success">{{item.backEndProduct.productState}}</span>*@
										<button v-if="item.OnAndOff==true" class="btn bg-gradient-success mb-0 toast-btn" v-on:click="changeState(item)">上架</button>
										<button v-else class="btn bg-gradient-danger  mb-0 toast-btn" v-on:click="changeState(item)">下架</button>
									</td>
									<td class="align-middle text-center">
										<span class="text-secondary text-xs font-weight-bold">{{item.backEndProduct.productLauchedTime}}</span>
									</td>
									<td class="align-middle text-center">
										<span class="text-secondary text-xs font-weight-bold">{{item.backEndProduct.productSoldTime}}</span>
									</td>
									<td class="align-middle">
										@*<a href="javascript:;" class="text-secondary font-weight-bold text-xs" data-toggle="tooltip" data-original-title="Edit user">
										Edit
										</a>*@
										<button class="btn bg-gradient-info mb-0 toast-btn"><a :href="'Details?id='+item.backEndProduct.productId">編輯</a></button>
										<button class="btn bg-gradient-danger  mb-0 toast-btn unState" v-on:click="deleteCheck(item)">刪除</button>
									</td>

								</tr>

							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="modal fade " id="insertPage" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<div class="form-group">
						<label class="form-label">商品名稱:</label>
						<input class="form-control" v-model="productName" required />
					</div>
					<div class="form-group">
						<label class="form-label">商品售價:</label>
						<input class="form-control" v-model="productPrice" required />
					</div>
					<div class="form-group">
						<label class="form-label">上架數量:</label>
						<input class="form-control" v-model="productAmount" required />
					</div>
					<div class="form-group">
						<label class="form-label">商品描述:</label>
						<input class="form-control" v-model="productDescription" />
					</div>
					<div class="form-group">
						<label class="form-label">商品類型:</label>

						<select v-model="productType">
							<option value="">類型</option>
							<option value="1">狗用</option>
							<option value="2">貓用</option>
							<option value="3">鮮食</option>
						</select>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
					<button type="button" class="btn btn-primary">新增</button>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts{

	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>

		let app = new Vue({
			el: '#app',
			data: {
				backendProducts: [],
				showProducts: [],
				keyword: "",
				productName: "",
				productPrice: "",
				productAmount: "",
				productDescription: "",
				productType: "商品專區",
				
			},
			mounted: function () {
				let _this = this;
				_this.Products();

			},
			methods: {
				//網頁載入就會掛載全部商品資料的方法
				Products: function () {
					let _this = this;
					let request = {};

					axios.get(`/api/products/backEndProducts`, request).then(response => {
						_this.backendProducts = _this.showProducts = response.data;

						var productList = [];
						for (var i = 0; i < _this.showProducts.length; i++) {
							var item = _this.showProducts[i];
							if (item.backEndProduct.productState == 1) {
								item.OnAndOff = false;
								
							}
							if (item.backEndProduct.productState == 0) {
								item.OnAndOff = true;
							}
							productList.push(item);
						}
						_this.showProducts = productList;
					});
				},
				productFilter: function () {
					//依照搜尋欄位篩選商品(Id、Name)
					let _this = this;
					let request = {};
					_this.showProducts = [];

					for (let i = 0; i < _this.backendProducts.length; i++) {
						let item = _this.backendProducts[i];
						let itemId = item.backEndProduct.productId.toString();
						if (itemId.includes(parseInt(_this.keyword))) {
							_this.showProducts.push(item);
						}
						else if (item.backEndProduct.productName.includes(_this.keyword)) {
							_this.showProducts.push(item);
						}
					}
				},
				changeState: function (item) {
					let _this = this;					
					let ID = parseInt(item.backEndProduct.productId);
					let ProductList = [];
					if (item.backEndProduct.productState == 0) {
						if(confirm('確定要上架?')){
							axios.put(`/api/products/PutProductState/?id=${ID}&state=1`).then(response => {
								alert(response.data);
								item.OnAndOff = false;
								for (let i = 0; i < _this.showProducts.length;i++) {
									let product = _this.showProducts[i];
									ProductList.push(product);
								};
								_this.showProducts=ProductList;
								
							});
						}														
						
						
					}
					else {
						if(confirm('確定要下架?')){
							axios.put(`/api/products/PutProductState/?id=${ID}&state=0`).then(response => {
								alert(response.data);
								item.OnAndOff = true;
								for (let i = 0; i < _this.showProducts.length; i++) {
									let product = _this.showProducts[i];
									ProductList.push(product);
								};
								_this.showProducts = ProductList;
								
							});
						}
					
					}
					
				},
				showInsertPage: function () {
					const myModal = new bootstrap.Modal('#insertPage')
					myModal.show();
				},
				deleteCheck: function (item) {
					Swal.fire({
						title: `確定要此刪除嗎?`,
						text: `商品編號:${item.backEndProduct.productId}，商品名稱:${item.backEndProduct.productName}`,
						icon: 'warning',
						showCancelButton: true,
						confirmButtonColor: '#3085d6',
						cancelButtonColor: '#d33',
						confirmButtonText: '刪除',
						cancelButtonText: '取消',
					}).then((result) => {
						if (result.isConfirmed) {
							Swal.fire(
								'Deleted!',
								'Your file has been deleted.',
								'success'
							)
						}
					})
				},
				deleteProduct: function (item) {

				},

			},

			//sortBy: function (val) {
			//	let _this = this;
			//	//依照時間排序
			//	if (val == 'time') {
			//		return _this.showProducts.sort((a, b) => new Date(a.product.productLauchedTime) - new Date(b.product.productLauchedTime));
			//	}
			//	//依照價格排序
			//	if (val == 'price') {
			//		return _this.showProducts.sort((a, b) => a.product.productPrice - b.product.productPrice);
			//	}
			//},
			//ProductType:function(val){
			//	let _this = this;
			//	if (val == 'food') {
			//		return _this.showProducts.sort((a, b) => a.product.productPrice - b.product.productPrice);
			//	}
			//}

			computed: {

			},

		});

	</script>
    }


