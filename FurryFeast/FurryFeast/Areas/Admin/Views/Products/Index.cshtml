@model IEnumerable<FurryFeast.Models.Product>

@{
	ViewData["Title"] = "Index";
	Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section Style{
	<style>
		.unState {
			background-color: gray;
		}

		.btnState {
			display: inline-block;
		}

		.drop {
			background-color: #ffedad;
			color: #3b3b3b;
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		}

			.drop:hover {
				background-color: #ffce78;
			}

		.btn-secondary:hover {
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		}
	</style>
}

<div class="container-fluid" id="app">
	<div class="row">
		<div class="col-12">
			<div class="card my-4">

				<div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
					<div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3 ">
						<h6 class="text-white text-capitalize ps-3">寵物商城商品管理</h6>
					</div>
				</div>
				<div class="row">


					<div class="dropdown mx-3 mt-2 col-1">
						<button class="btn btn-secondary dropdown-toggle drop" type="button" id="dropdownMenu2" data-bs-toggle="dropdown" aria-expanded="false">
							商品專區
						</button>
						<ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
							<li><button class="dropdown-item" type="button">全部商品</button></li>
							<li><button class="dropdown-item" type="button">鮮食商品</button></li>
							<li><button class="dropdown-item" type="button">狗狗商品</button></li>
							<li><button class="dropdown-item" type="button">貓咪商品</button></li>
						</ul>
					</div>
						<div class="dropdown mx-3 mt-2 col-1">
							<button class="btn btn-secondary dropdown-toggle drop" type="button" id="dropdownMenu2" data-bs-toggle="dropdown" aria-expanded="false">
								商品類別
							</button>
							<ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
								<li><button class="dropdown-item" type="button"></button>全類別</li>
								<li><button class="dropdown-item" type="button">生活用品</button></li>
								<li><button class="dropdown-item" type="button">主食/零食</button></li>
							</ul>
						</div>
					
					@*<select>
					<option>全部商品</option>
					<option>鮮食專區</option>
					<option>狗狗專區</option>
					<option>貓咪專區</option>
					</select>
					<div class="btnState mx-3 mt-2 pr-10 col-3">
					@*<button class="btn bg-gradient-info mb-0 toast-btn">全部商品</button>
					<button class="btn bg-gradient-warning  mb-0 toast-btn">上架中</button>
					<button class="btn bg-gradient-danger  mb-0 toast-btn unState">未上架</button>
					</div>*@
					<div class="ms-md-auto mt-2 pe-md-3 d-flex align-items-center col-3 mx-3">
						<div class="input-group input-group-outline">
							<label class="form-label">Search Product...</label>
							<input type="text" class="form-control">
						</div>
					</div>

				</div>

				<div class="card-body px-0 pb-2">
					<div class="table-responsive p-0">
						<table class="table align-items-center mb-0">
							<thead>
								<tr>
									<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">商品編號</th>
									<th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">商品名稱</th>
									<th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">商品售價</th>
									<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">上架狀態</th>
									<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">上次上架時間</th>
									<th class="text-secondary opacity-7"></th>
								</tr>
							</thead>
							<tbody>
								<tr v-for="item in showProducts" :key="item.backEndProduct.productId">
									<td class="align-middle text-center">
										<span class="text-secondary text-xs font-weight-bold">{{item.backEndProduct.productId}}</span>
									</td>
									<td>
										<div class="d-flex px-2 py-1">
											<div>
												<img src="../assets/img/team-2.jpg" class="avatar avatar-sm me-3 border-radius-lg" alt="user1">
											</div>
											<div class="d-flex flex-column justify-content-center">
												<h6 class="mb-0 text-sm">{{item.backEndProduct.productName}}</h6>
												<p class="text-xs text-secondary mb-0">{{item.backEndProduct.productAmount}}</p>
											</div>
										</div>
									</td>
									<td>
										<p class="text-xs font-weight-bold mb-0">${{item.backEndProduct.productPrice}}</p>
										<p class="text-xs text-secondary mb-0">Organization</p>
									</td>
									<td class="align-middle text-center text-sm">
										<span class="badge badge-sm bg-gradient-success">{{item.backEndProduct.productState}}</span>
									</td>
									<td class="align-middle text-center">
										<span class="text-secondary text-xs font-weight-bold">{{item.backEndProduct.productLauchedTime}}</span>
									</td>
									<td class="align-middle">
										<a href="javascript:;" class="text-secondary font-weight-bold text-xs" data-toggle="tooltip" data-original-title="Edit user">
											Edit
										</a>
									</td>
								</tr>

							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts{

	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
	<script>

		let app = new Vue({
			el: '#app',
			data: {
				backendProducts: [],
				showProducts: [],

				filterObj: {
					name: "",
					keyword: "",
				}

			},
			mounted: function () {
				let _this = this;
				_this.Products();

			},
			methods: {
				//網頁載入就會掛載全部商品資料的方法
				Products: function () {
					let _this = this;
					var request = {};

					axios.get(`/api/products/backEndProducts`, request).then(response => {
						_this.backendProducts = _this.showProducts = response.data;
						alert('成功');
					});
				},
				//productFilter:function(){
				//	//依照搜尋欄位篩選商品
				//	var _this = this;
				//	//console.log(_this.products);
				//	_this.showProducts=[];
				//	for (var i = 0; i < _this.products.length;i++) {
				//		var item = _this.products[i];
				//		if (item.product.productName.includes(_this.filterObj.keyword)) {
				//			_this.showProducts.push(item);
				//		 }
				//	}

				//},
				//sortBy: function (val) {
				//	let _this = this;
				//	//依照時間排序
				//	if (val == 'time') {
				//		return _this.showProducts.sort((a, b) => new Date(a.product.productLauchedTime) - new Date(b.product.productLauchedTime));
				//	}
				//	//依照價格排序
				//	if (val == 'price') {
				//		return _this.showProducts.sort((a, b) => a.product.productPrice - b.product.productPrice);
				//	}
				//},
				//ProductType:function(val){
				//	let _this = this;
				//	if (val == 'food') {
				//		return _this.showProducts.sort((a, b) => a.product.productPrice - b.product.productPrice);
				//	}
				//}
			},
			computed: {

			},

		});

	</script>
    }

@*<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductState)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductLaunchedTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductSoldTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductPicId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Articles)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductType)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductAmount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductState)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductLaunchedTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductSoldTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductPicId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Articles.ArticlesId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductType.ProductTypeId)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>*@
