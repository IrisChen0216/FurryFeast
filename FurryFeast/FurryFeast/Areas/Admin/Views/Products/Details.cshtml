@model FurryFeast.Models.Product

@{
	ViewData["Title"] = "Index";
	Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="col-md-12 mb-lg-0 mb-4" id="app">
	<div class="card mt-4">
		<div class="card-header pb-0 p-3">
			<div class="row">
				<div class="col-6 d-flex align-items-center">
					<h6 class="mb-0">商品編號：{{backendProduct.productId}}</h6>
				</div>

			</div>
		</div>
		<div>
			<template v-if="NoEdit.Edit==true">
				<div class="card-body p-3">
					<div class="card card-body border card-plain border-radius-lg d-flex align-items-self-start">
						<button v-on:click="editProduct">
							<i class="material-icons ms-auto text-dark cursor-pointer" data-bs-toggle="tooltip" data-bs-placement="top" title="編輯">edit編輯</i>
						</button>
						<div class="row">
							<div class="col-6">
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">商品名稱：</h6>
										<h6 class="mb-0">{{backendProduct.productName}}</h6>
									</div>
								</div>

								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">商品種類：</h6>
										<h6 class="mb-0">{{backendProduct.productTypeName}}</h6>
									</div>
								</div>
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">上架數量：</h6>
										<h6 class="mb-0">{{backendProduct.productAmount}}</h6>
									</div>
								</div>
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">商品單價：</h6>
										<h6 class="mb-0">{{backendProduct.productPrice}}</h6>
									</div>
								</div>
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">商品描述：</h6>
										<h6 class="mb-0">{{backendProduct.productDescription}}</h6>
									</div>
								</div>
							</div>
							<div class="col-6">
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">上架時間：</h6>
										<h6 class="mb-0">{{backendProduct.productLaunchedTime}}</h6>
									</div>
								</div>
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">下架時間：</h6>
										<h6 class="mb-0">{{backendProduct.productSoldTime}}</h6>
									</div>
								</div>
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">庫存ID：</h6>
										<h6 class="mb-0">{{backendProduct.articlesId}}</h6>
									</div>
								</div>
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">商品圖片：</h6>
										<img :src="'data:image/png;base64,'+ backendProduct.productPicImage" width="250" />
									</div>
								</div>
							</div>
						</div>
					</div>


				</div>
			</template>
			<template v-else>
				<div class="card-body p-3">
					<div class="card card-body border card-plain border-radius-lg d-flex align-items-self-start">

						<button v-on:click="update">
							<i class="material-icons ms-auto text-dark cursor-pointer" data-bs-toggle="tooltip" data-bs-placement="top" title="修改">修改</i>
						</button>
						<button v-on:click="cancel">取消</button>

						<div class="row">
							<div class="col-6">
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">商品名稱：</h6>
										<h6 class="mb-0"><input v-model="backendProduct.productName" /></h6>
									</div>
								</div>

								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">商品種類：</h6>
										<h6 class="mb-0"><input v-model="backendProduct.productTypeName" /></h6>
									</div>
								</div>
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">上架數量：</h6>
										<h6 class="mb-0"><input v-model="backendProduct.productAmount" /></h6>
									</div>
								</div>
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">商品單價：</h6>
										<h6 class="mb-0"><input v-model="backendProduct.productPrice" /></h6>
									</div>
								</div>
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">商品描述：</h6>
										<h6 class="mb-0"><input v-model="backendProduct.productDescription" /></h6>
									</div>
								</div>
							</div>
							<div class="col-6">
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">上架時間：</h6>
										<h6 class="mb-0">{{backendProduct.productLaunchedTime}}</h6>
									</div>
								</div>
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">下架時間：</h6>
										<h6 class="mb-0">{{backendProduct.productSoldTime}}</h6>
									</div>
								</div>
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">庫存ID：</h6>
										<h6 class="mb-0">{{backendProduct.articlesId}}</h6>
									</div>
								</div>
								<div class="row">
									<div class="col-md-8 mb-md-0 mb-4">
										<h6 class="mb-0">商品圖片：</h6>
										<img :src="'data:image/png;base64,'+ backendProduct.productPicImage" width="250" />
									</div>
								</div>
							</div>
						</div>
					</div>


				</div>
			</template>
		</div>
	</div>
</div>

@section Scripts{

	<script>

		let app = new Vue({
			el: '#app',
			data: {
				backendProduct: [],
				NoEdit: { Edit: true },
				originalProductName: "",
				originalProductAmount: "",
				originalProductPrice: "",
				originalProductTypeName: "",
				originalProductDescription: "",
				originalProductLaunchedTime: "",
				originalProductSoldTime: "",

			},
			mounted: function () {
				let _this = this;
				_this.ProductDetail();

			},
			methods: {
				//網頁載入就會掛載全部商品資料的方法
				ProductDetail: function () {
					let _this = this;
					let ID = @ViewBag.productId;
					axios.get(`/api/products/GetProduct/${ID}`).then(response => {
						_this.backendProduct = response.data;

					});
				},

				//changeState: function (Id) {
				//	let _this = this;
				//	let chageStateList = [];
				//	for (let i = 0; i < _this.showProducts.length; i++) {
				//		let item = _this.showProducts[i];
				//		if (item.backEndProduct.productId == Id) {
				//			if (item.OnAndOff == true) {
				//				confirm('確定要上架?');//目前檔不了true變成false，未按照資料庫上架狀態顯示，待以資料庫狀態顯示、更新
				//				item.OnAndOff = false;
				//			}
				//			else {
				//				confirm('確定要下架?');
				//				item.OnAndOff = true;
				//			}
				//		}
				//		chageStateList.push(item);
				//	}
				//	_this.showProducts = chageStateList;
				//},
				editProduct: function () {
					alert("edit");
					let _this = this;
					_this.NoEdit.Edit = false;
					_this.originalProductName = _this.backendProduct.productName;
					_this.originalProductAmount = _this.backendProduct.productAmount;
					_this.originalProductPrice = _this.backendProduct.productPrice;
				},
				cancel: function () {
					let _this = this;
					_this.NoEdit.Edit = true;
					_this.backendProduct.productName = _this.originalProductName;
					_this.backendProduct.productAmount = _this.originalProductAmount;
					_this.backendProduct.productPrice = _this.originalProductPrice;
				},
				update: function () {
					alert("update");
					let _this = this;
					var request = {
						ProductId: _this.backendProduct.productId,
						ProductName: _this.backendProduct.productName,
						ProductAmount: _this.backendProduct.productAmount,
						ProductPrice: _this.backendProduct.productPrice,
						ProductState: _this.backendProduct.productState,
						ProductDescription: _this.backendProduct.productDescription,
						ProductLaunchedTime: _this.backendProduct.productLaunchedTime,
						ProductSoldTime: _this.backendProduct.productSoldTime,
						ProductTypeId: _this.backendProduct.productTypeId,						
						ProductPicImage: _this.backendProduct.productPicImage,
						ArticlesId: _this.backendProduct.articlesId,
						ProductTypeName: _this.backendProduct.productTypeName
					};
					axios.put(`/api/products/PutProduct/`, request).then(response => {
						alert(response.data);
						_this.cancel();
						_this.ProductDetail();

					});
				},
			},
			

			computed: {

			},
		});

	</script>
    }
