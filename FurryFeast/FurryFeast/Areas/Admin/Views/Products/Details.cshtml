@model FurryFeast.Models.Product

@{
	ViewData["Title"] = "Index";
	Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section Style{
	<style>
		.nBtn {
			background: none;
			padding: 10px;
			font-size: 14px;
			border-radius: 6px;
			width: 140px;
		}

		.btn_green {
			padding: 10px 20px;
			border: 1px solid yellowgreen;
			background: yellowgreen;
			color: white;
			width: 80px;
		}

			.btn_green:hover {
				border: 1px solid yellowgreen;
				background: white;
				color: black;
			}

		.btn_cancel{
			padding: 10px 20px;
			border: 1px solid gray;
			background: gray;
			color: white;
			width: 80px;
		}
		.orderTable {
			width: 100%;
		}

		.title {
			vertical-align: initial;
			font-weight: bold;
			font-size: 15px;
			display: block;
			text-align: left;
			width: auto;
		}

		.box {
			background: white;
			border-radius: 1rem;
			padding-bottom: 10px;
			padding: 15px 20px;
			border: 1px solid rgb(235 235 235);
			font-size: 14px;
		}

		.btn_gray {
			background: white;
			border: 1px solid gray;
			color: gray;
		}
	</style>
}

<div class="col-md-12 mb-lg-0 mb-4" id="app">
	<div class="card mt-4">
		<div class="card-header pb-0 p-3">
			<div class="row">

			</div>
		</div>
		<div>
			<template v-if="NoEdit.Edit==true">
				<button class="nBtn btn_green m-0 ms-3" v-on:click="editProduct">
					編輯
				</button>
				<a class="nBtn btn_gray mb-3" :href="'Index'">回到商品管理列表</a>
				<div class="card-body p-3">
					<div class="card card-body border card-plain border-radius-lg d-flex align-items-self-start">

						<div class="row">
							<h4 class="mt-3 px-2">商品編號：{{backendProduct.productId}}</h4>

							<div class="box mb-4 mt-3 col-6">
								<table class="orderTable">
									<tbody>
										<tr>
											<td><span class="title">商品名稱</span></td>
											<td><span>{{backendProduct.productName}}</span></td>
										</tr>
										<tr>
											<td><span class="title">商品種類</span></td>
											<td><span>{{backendProduct.productTypeName}}</span></td>
										</tr>
										<tr>
											<td><span class="title">上架數量</span></td>
											<td><span>{{backendProduct.productAmount}}</span></td>
										</tr>
										<tr>
											<td><span class="title">商品單價</span></td>
											<td><span>{{backendProduct.productPrice}}</span></td>
										</tr>

										<tr>
											<td><span class="title">上架時間</span></td>
											<td><span>{{backendProduct.productLaunchedTime}}</span></td>
										</tr>
										<tr>
											<td><span class="title">下架時間</span></td>
											<td><span>{{backendProduct.productSoldTime}}</span></td>
										</tr>
										<tr>
											<td><span class="title">庫存</span></td>
											<td><span>{{backendProduct.articlesId}}</span></td>
										</tr>

									</tbody>
								</table>
							</div>
							<div class="box mb-4 mt-3 col-6">
								<table class="orderTable">
									<tbody>
										<tr>
											<td><span class="title">商品描述</span></td>
											<td><span>{{backendProduct.productDescription}}</span></td>
										</tr>
									</tbody>
								</table>
							</div>
							<div class="box mb-4 mt-3 col-12">
								<table class="orderTable">
									<tr>
										<td><span class="title">商品圖片</span></td>
										<td v-for="(pic,idx) in backendProduct.productPicImage"><img :src="'data:image/png;base64,'+ pic" width="250" /></td>
									</tr>									
								</table>
							</div>		
						</div>
					</div>
				</div>
			</template>

			<template v-else>
				<button class="nBtn btn_green m-0 ms-3" v-on:click="update">
					更新
				</button>
				<button class="btn_cancel nBtn" v-on:click="cancel">取消</button>
				<div class="card-body p-3">
					<div class="card card-body border card-plain border-radius-lg d-flex align-items-self-start">

						<div class="row">
							<h4 class="mt-3 px-2">商品編號：{{backendProduct.productId}}</h4>

							<div class="box mb-4 mt-3 col-6">
								<table class="orderTable">
									<tbody>
										<tr>
											<td><span class="title">商品名稱</span></td>
											<td><span><input v-model="backendProduct.productName" /></span></td>
										</tr>
										<tr>
											<td><span class="title">商品種類</span></td>
											<td>
												<span>
													<select v-model="selected">
														<option >--請選擇--</option>
														<option value="1">DogProducts</option>
														<option value="2">CatProducts</option>
														<option value="3">FreshFoods</option>
														<option value="4">DonateProduct</option>
													</select>
												</span>
											</td>
										</tr>
										<tr>
											<td><span class="title">上架數量</span></td>
											<td><span><input v-model="backendProduct.productAmount" /></span></td>
										</tr>
										<tr>
											<td><span class="title">商品單價</span></td>
											<td><span><input v-model="backendProduct.productPrice" /></span></td>
										</tr>

										<tr>
											<td><span class="title">上架時間</span></td>
											<td><span>{{backendProduct.productLaunchedTime}}</span></td>
										</tr>
										<tr>
											<td><span class="title">下架時間</span></td>
											<td><span>{{backendProduct.productSoldTime}}</span></td>
										</tr>
										<tr>
											<td><span class="title">庫存</span></td>
											<td><span>{{backendProduct.articlesId}}</span></td>
										</tr>

									</tbody>
								</table>
							</div>
							<div class="box mb-4 mt-3 col-6">
								<table class="orderTable">
									<tbody>
										<tr>
											<td><span class="title">商品描述</span></td>
											<td><span>{{backendProduct.productDescription}}</span></td>
										</tr>
									</tbody>
								</table>
							</div>
							<div class="box mb-4 mt-3 col-12">
								<table class="orderTable">
									<tr v-for="(pic,idx) in backendProduct.productPicImage">
										<td><span class="title">商品圖片</span></td>					
										<td><img :src="'data:image/png;base64,'+ pic" width="250" /></td>
										<td><input type="file" v-on:change="ImgPreview($event,idx)" /></td>
									</tr>
								</table>
							</div>
						</div>
					</div>
				</div>
			</template>

		</div>
	</div>
</div>

@section Scripts{

	<script>

		let app = new Vue({
			el: '#app',
			data: {
				backendProduct: [],
				NoEdit: { Edit: true },
				originalProductName: "",
				originalProductAmount: "",
				originalProductPrice: "",
				originalProductTypeName: "",
				originalProductDescription: "",
				originalProductLaunchedTime: "",
				originalProductSoldTime: "",
				selected: "",
				originalSelected: "",
				ProductPicImage: ["", "", ""],
				ProductPicId: [0, 0, 0],
			},
			mounted: function () {
				let _this = this;
				_this.ProductDetail();
			},
			methods: {
				//網頁載入就會掛載全部商品資料的方法
				ProductDetail: function () {
					let _this = this;
					let ID = @ViewBag.productId;
					axios.get(`/api/products/GetProduct/${ID}`).then(response => {
						_this.backendProduct = response.data;

					});
				},
				editProduct: function () {
					//alert("edit");
					let _this = this;
					_this.NoEdit.Edit = false;
					_this.originalProductName = _this.backendProduct.productName;
					_this.originalProductAmount = _this.backendProduct.productAmount;
					_this.originalProductPrice = _this.backendProduct.productPrice;
					_this.originalSelected = _this.backendProduct.productTypeId;
					_this.selected = _this.backendProduct.productTypeId;
				},
				cancel: function () {
					let _this = this;
					_this.NoEdit.Edit = true;
					_this.backendProduct.productName = _this.originalProductName;
					_this.backendProduct.productAmount = _this.originalProductAmount;
					_this.backendProduct.productPrice = _this.originalProductPrice;
					_this.selected = _this.originalSelected
				},
				update: function () {
					//alert("update");
					let _this = this;
					_this.UpdateImages();
					var request = {
						ProductId: _this.backendProduct.productId,
						ProductName: _this.backendProduct.productName,
						ProductAmount: _this.backendProduct.productAmount,
						ProductPrice: _this.backendProduct.productPrice,
						ProductState: _this.backendProduct.productState,
						ProductDescription: _this.backendProduct.productDescription,
						ProductLaunchedTime: _this.backendProduct.productLaunchedTime,
						ProductSoldTime: _this.backendProduct.productSoldTime,
						ProductTypeId: _this.selected,
						ProductPicImage: _this.backendProduct.productPicImage,
						ArticlesId: _this.backendProduct.articlesId,
						ProductTypeName: _this.backendProduct.productTypeName
					};
					axios.put(`/api/products/PutProduct/`, request).then(response => {
						_this.ProductDetail();
						if (response.data == "success") {
							Swal.fire('更新商品成功');
						}						
						_this.cancel();
					});

				},
				ImgPreview: function (event, idx) {
					let _this = this;
					let newImg = event.target.files[0];
					let reader = new FileReader();
					reader.onload = (event) => {
						_this.backendProduct.productPicImage[idx] = event.target.result.split(',')[1];
						_this.$forceUpdate();
					};
					reader.readAsDataURL(newImg);

					_this.ProductPicImage[idx] = event.target.files[0];
					_this.ProductPicId[idx] = _this.backendProduct.productPicId[idx];
				},
				UpdateImages: function () {
					//alert('有');
					let _this = this;
					let formData = new FormData();

					for (let i = 0; i < 3; i++) {
						if (_this.ProductPicId[i] != null) {

							formData.append('ProductPicId', _this.ProductPicId[i]);
						}
						if (_this.ProductPicImage[i] != null) {

							formData.append('ProductPicImage', _this.ProductPicImage[i]);
						}

					};

					axios.post(`/api/products/PutProductImage/`, formData).then(response => {
						//alert(response.data);
						//if (response.data == "success") {
						//	Swal.fire('更新圖片成功');
						//}
						_this.ProductDetail();
						_this.ProductPicImage = ["", "", ""];
					});
				},
			},
			computed: {

			},
		});

	</script>
    }
