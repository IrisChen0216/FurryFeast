@model IEnumerable<FurryFeast.Models.Article>
@{
    ViewData["Title"] = "ArticlesList";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section Style{
	<style>
		.unState {
			background-color: gray;
		}

		.btnState {
			display: inline-block;
		}

		.drop {
			background-color: #ffedad;
			color: #3b3b3b;
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		}

		.drop:hover {
			background-color: #ffce78;
		}

		.btn-secondary:hover {
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		}

		input {
			outline-style: none;
			border: 1px solid #ccc;
			border-radius: 3px;
			padding-left:5px;
			width:100%;
			height:30px;
		}
	</style>
}

<h1>Index</h1>

<div class="container-fluid" id="app">
	<div class="row">
		<div class="col-12">
			<div class="card my-4">

				<div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
					<div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3 ">
						<h6 class="text-white text-capitalize ps-3">文章管理</h6>
					</div>
				</div>
				<div class="row">


					<div class="dropdown mx-3 mt-2 col-1">
						<button class="btn btn-secondary dropdown-toggle drop" type="button" id="dropdownMenu2" data-bs-toggle="dropdown" aria-expanded="false">
							文章管理
						</button>
						<ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
							<li><button class="dropdown-item" type="button">全部文章</button></li>
						</ul>
					</div>
					<div class="btnState mx-3 mt-2 pr-10 col-3">

						<button class="btn bg-gradient-warning  mb-0 toast-btn">上架中</button>
						<button class="btn bg-gradient-danger  mb-0 toast-btn unState">未上架</button>
					</div>
					<div class="form-group  mt-2 col-2">
						@*新增按鍵*@
						<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
							新增文章
						</button>
					</div>

					@*搜尋欄*@
					<div class="ms-md-auto mt-2 pe-md-3 d-flex align-items-center col-3 mx-3">
						<div class="input-group input-group-outline">
							<label class="form-label">Search ...</label>
							<input type="text" class="form-control">
						</div>
					</div>

				</div>

				<div class="card-body px-0 pb-2">
					<div class="table-responsive p-0">
						<table class="table align-items-center mb-0">
							<thead>
								<tr>
									<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">文章編號</th>
									<th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">文章標題</th>
									<th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">作者</th>
									<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">上架時間</th>
									<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7"></th>
								</tr>
							</thead>
							<tbody>
								<tr v-for="item in aticlesData" :key="item.articleId">
									<template>
										<td class="align-middle text-center">
											<span class="text-secondary text-xs font-weight-bold">{{item.articleId}}</span>
										</td>
										<td>
											<span class="text-secondary text-xs font-weight-bold">{{item.articleTitle}}</span>
										</td>
										<td>
											<p class="text-xs font-weight-bold mb-0">{{item.adminId}}</p>
											<p class="text-xs text-secondary mb-0">Organization</p>
										</td>
										<td class="align-middle text-center text-sm">
											<span class="text-secondary text-xs font-weight-bold">{{item.articleDate}}</span>
										</td>
										<td class="align-middle">
											<button v-if="item.OnAndOff==true" class="btn bg-gradient-success mb-0 toast-btn">上架</button>
											<button v-else class="btn bg-gradient-danger  mb-0 toast-btn">下架</button>
											<button class="btn bg-gradient-info mb-0 toast-btn">編輯</button>
											<button class="btn bg-gradient-danger  mb-0 toast-btn unState">刪除</button>
										</td>
									</template>
								</tr>

							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="modal fade " id="insertPage" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
					<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
				</div>
				<div class="modal-body">
					<div class="form-group">
						<label class="form-label">商品名稱:</label>
						<input class="form-control" required />
					</div>
					<div class="form-group">
						<label class="form-label">商品售價:</label>
						<input class="form-control"required />
					</div>
					<div class="form-group">
						<label class="form-label">上架數量:</label>
						<input class="form-control" required />
					</div>
					<div class="form-group">
						<label class="form-label">商品描述:</label>
						<input class="form-control"/>
					</div>
					<div class="form-group">
						<label class="form-label">商品類型:</label>

						<select>
							<option value="0">鮮食</option>
							<option value="1">狗狗</option>
							<option value="2">貓咪</option>
						</select>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
					<button type="button" class="btn btn-primary">新增</button>
				</div>
			</div>
		</div>
	</div>
</div>




<p>
    <a asp-action="Create">Create New</a>
</p>

@section Scripts
{
	<script>
		var app = new Vue({
			el: '#app',
			data: {
				aticlesData: {}
			},
			mounted: function () {
				let _this = this;
				_this.getData();

			},
			methods: {
				getData: function () {
					let _this = this;
					axios.get('/api/articles/GetModel').then(response => {
						_this.aticlesData = response.data;
						console.log(_this.aticlesData);
						})
						.catch(error => {
							console.error(error);
						});
				}
			}
		})	
	</script>
}