@model IEnumerable<FurryFeast.Models.Article>
@{
    ViewData["Title"] = "ArticlesList";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section Style{
	<style>
		.unState {
			background-color: gray;
		}

		.btnState {
			display: inline-block;
		}

		.drop {
			background-color: #ffedad;
			color: #3b3b3b;
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		}

		.drop:hover {
			background-color: #ffce78;
		}

		.btn-secondary:hover {
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		}

		input {
			outline-style: none;
			border: 1px solid #ccc;
			border-radius: 6px;
			padding-left:5px;
			width:100%;
			height:30px;
		}

		.h1Header > h4 {
			position: relative;
			padding-bottom: 17px;
		}

		.h1Header > h4:before {
			content: "";
			position: absolute;
			left: 25px;
			bottom: 6px;
			width: 100%;
			height: 4px;
			background: #ccc;
		}
	</style>
}

<div class="container-fluid" id="app">
@*	<div class="mx-4 h1Header col-7 mb-4">
		<h4 style="display: inline-block;" class="ms-1 m-0">Article</h4><h2 style="display: inline-block;" class="mt-3 mx-2">Index</h2>
	</div>*@
	<div class="p-0 position-relative mt-n4 mx-3 z-index-2">
		<div class="border-radius-lg pt-4 ">
			<div class="mx-2 h1Header col-7 ">
				<h4 style="display: inline-block;" class="ms-1 m-0">Article</h4><h2 style="display: inline-block;" class="mt-3 mx-2">Index</h2>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-12">
			<div class="my-4" style="background: white; border-radius: 1rem; padding-bottom: 10px; padding: 10px 0px 10px 0px; border: 1px solid rgb(235 235 235);">
				<div class="row m-0 p-0">
					<div class="form-group m-4 col-2">
						@*新增按鍵*@
						<button type="button" class="btn mb-0 " style="background:lightpink" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
							<a :href="'create'" style="color: white">新增文章</a>

						</button>
					</div>

					@*搜尋欄*@
					<div class="ms-md-auto pe-md-3 d-flex align-items-center col-3 mx-4">
						<div class="input-group input-group-outline">
							<label class="form-label">請輸入文章編號或標題</label>
							<input id="search" type="text" class="form-control h-100" v-on:keyup="searchBar" v-model="keyword">
						</div>
					</div>
@*					<div class="ms-md-auto pe-md-3 d-flex align-items-center col-3 mx-4">
						<div class="input-group input-group-outline">
							<label class="form-label">Search ...</label>
							<input type="text" class="form-control h-100">
						</div>
					</div>*@

				</div>

				<div class="card-body p-0 pb-2">
					<div class="table-responsive p-0">
						<table class="table align-items-center mb-0">
							<thead>
							<tr>
								<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">文章編號</th>
								<th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">文章標題</th>
								<th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">作者</th>
								<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">上架時間</th>
								<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7"></th>
							</tr>
							</thead>
							<tbody>
							<tr v-for="item in aticlesData" :key="item.articleId">
								<template>
									<td class="align-middle text-center">
										<span class="text-secondary text-xs font-weight-bold">{{item.articleId}}</span>
									</td>
									<td>
										<span class="text-secondary text-xs font-weight-bold">{{item.articleTitle}}</span>
									</td>
									<td>
										<span class="text-secondary text-xs font-weight-bold">{{item.adminAccount}}</span>
									</td>
									<td class="align-middle text-center text-sm">
										<span class="text-secondary text-xs font-weight-bold">{{formatDate(item.articleDate)}}</span>
									</td>
									<td class="text-center pe-3">
										<button class="btn mb-0" style="background: dodgerblue"><a style="color: white" :href="'Edit?id='+item.articleId">編輯</a></button>
											<button class="btn mb-0 " style="background: crimson; color: white" v-on:click="deleteCheck(item.articleId)">刪除</button>
									</td>
								</template>
							</tr>

							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts
{
	<script>
		var app = new Vue({
			el: '#app',
			data: {
				aticlesData: {},
				keyword: "",
				originalData: [],
				moment: ""
			},
			mounted: function() {
				let _this = this;
				_this.getData();

			},
			methods: {
				getData: function() {
					let _this = this;
					axios.get('/api/articles/GetModel').then(response => {
						_this.aticlesData = response.data;
						_this.originalData = [...response.data];
						console.log(_this.aticlesData);

						let Data = [];

						for (let i = 0; i < _this.aticlesData.length; i++) {
							let item = _this.aticlesData[i];

							if (typeof item !== 'undefined') {
								item.OnAndOff = true;
								Data.push(item);
							} else {
								console.warn('Undefined item at index: ', i);
							}
						}
						_this.aticlesData = Data;

					}).catch(error => { console.error(error); });
				},
				deleteCheck: function(item) {
					let _this = this;
					Swal.fire({
						title: `確定要刪除文章嗎?`,
						icon: 'warning',
						showCancelButton: true,
						confirmButtonColor: '#3085d6',
						cancelButtonColor: '#d33',
						confirmButtonText: '刪除',
						cancelButtonText: '取消'
					}).then((result) => {
						if (result.isConfirmed) {
							_this.deleteAticle(item);
							console.log(item);
						}
					});
				},
				deleteAticle: function(ID) {
					let _this = this;
					axios.delete(`/api/articles/DeleteArticle/${ID}`).then(response => {
						if (response.data == "刪除文章成功!") {
							Swal.fire(
								'Deleted!',
								'Your file has been deleted.',
								'success'
							);
							_this.getData();
						}
					});
				},
				searchBar: function() {
					let _this = this;
					if (_this.keyword !== "") {
						_this.aticlesData = _this.originalData.filter(item => item.articleId == _this.keyword || item.articleTitle.includes(_this.keyword));
					} else {
						_this.aticlesData = [..._this.originalData];
					}
				},
				formatDate: function (dateString) {
					return moment(dateString).format('YYYY/MM/DD h:mm:ss a');

				}
			}

		});
	</script>
}