@model FurryFeast.Models.Article

@{
    ViewData["Title"] = "Create";
}

@section Style
	{
	<style>
		.inputbox {
			font-size: 15px;
			border: none;
			background: none;
			height: 40px;
			border-bottom: 1px solid #ccc;
			padding: 0px 0px 0px 5px;
		}

			.inputbox:focus {
				outline: none;
				border-color: gray
			}

		.btn-secondary:hover {
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		}

	</style>
}


<div class="container m-3" style="width:95%" id="app">
	<h4>Article</h4>
	<hr />
	<h1>Create</h1>
	<div >
		<div class="mb-4 row" style="font-size: 13px;">
			<div class="col-4">
				<span style="padding:0 10px 0 5px; vertical-align: initial;">文章標題</span>
				<input class="inputbox" style="font-size: 13px;" type="text" v-model="articleTitle" required />
			</div>
			<div class="col" style="font-size: 13px; text-align: start">
				<span style="padding-right: 10px; vertical-align: initial;">作者</span>
				<section v-for="item in data">
					<option style ="font-size: 13px;" type="text" :value="item.adminAcc"></option>
				</section>
			</div>
@*			<div class="col" style="font-size: 13px;">
				<span style="padding-right: 10px; vertical-align: initial;">發表時間</span>
				<input class="inputbox" style="font-size: 13px;" type="text" v-model="editingArticleDate" disabled />
			</div>*@
		</div>
		<p class="mb-2" style="font-size: 13px; padding: 5px;font-weight: 400">文章內容</p>
		<textarea class=" mb-4 inputbox" style="color: #344767; width: 100%; height: 250px; font-size: 13px; line-height: 25px; letter-spacing: 1px;" v-model="articleText" required></textarea>
	</div>
	<div>
		<button class="btn" style="background: yellowgreen; color:white" v-on:click="addAticle">新增</button>
		<button class="btn ms-2" style="background: darkgray"><a style="color: white" :href="'index'">取消</a></button>
	</div>

</div>


<div id="editor">This is some sample content.</div>


@section Scripts
{

	<script src="https://cdn.ckeditor.com/ckeditor5/38.0.1/classic/ckeditor.js"></script>
	<script>
		ClassicEditor.create( document.querySelector( '#editor' ) )
			.then( editor => {
				window.editor = editor;
			} )
			.catch( error => {
				console.error('There was a problem initializing the editor.', error);
			} );
	</script>
	<script>
		let app = new Vue({
			el: '#app',
			data: {
				data: [],
				articleTitle:"",
				articleText:"",
				adminId:""
			},
			mounted: function () {
				let _this = this;
				_this.getAdminId();

			},
			methods: {
				getAdminId:function() {
					let _this = this;
					axios.get('/api/articles/GetAdmin').then(response => {
						_this.data = response.data;
						console.log(_this.data);
					});
				},
				addAticle: function () {
					let _this = this;
					var request = {
						AdminId: 0,
						ArticleTitle: _this.articleTitle,
						ArticleText: _this.articleText,
						ArticleDate: new Date()

					};
					axios.post(`/api/articles/AddArticle/`, request).then(response => {
						alert(response.data);

						_this.productName = "";
						_this.productPrice = "";
						_this.productAmount = "";
						_this.productDescription = "";
						_this.productType = "";
						_this.productState = "";
						_this.selectedArticle = "";
					});
				}
			}
		});

	</script>
}

