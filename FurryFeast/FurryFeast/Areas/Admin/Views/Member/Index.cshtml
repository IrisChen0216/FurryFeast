@section Style{
	<style>
		.unState {
			background-color: gray;
		}

		.btnState {
			display: inline-block;
		}

		.drop {
			background-color: #ffedad;
			color: #3b3b3b;
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		}

			.drop:hover {
				background-color: #ffce78;
			}

		.btn-secondary:hover {
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		}

		input {
			outline-style: none;
			border: 1px solid #ccc;
			border-radius: 3px;
			padding-left: 5px;
			width: 100%;
			height: 30px;
		}
	</style>
}



<div class="container-fluid" id="app">
	<div class="row">
		<div class="col-12">
			<div class="card my-4">

				<div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
					<div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3 ">
						<h6 class="text-white text-capitalize ps-3">會員管理</h6>
					</div>
				</div>
				@*搜尋欄*@
				@*				<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdrop" v-on:click="showInsertPage">
				新增會員
				</button>*@
				<div class="ms-md-auto mt-2 pe-md-3 d-flex align-items-center col-3 mx-3">
					<div class="input-group input-group-outline">
						<label class="form-label">Search Member...</label>
						<input type="text" class="form-control" v-model="keyword" @@keyup="filtermember">
					</div>
				</div>

			</div>

			<div class="card-body px-0 pb-2">
				<div class="table-responsive p-0">
					<table class="table align-items-center mb-0">
						<thead>
							<tr>
								<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">會員編號</th>
								<th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">姓名</th>
								<th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">性別</th>
								<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">生日</th>
								<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">手機號碼</th>
								<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Email</th>
								<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">地址</th>
								<th class="text-secondary opacity-7"></th>
							</tr>
						</thead>
						<tbody>
							<tr v-for="item in members">

								<td class="align-middle text-center">
									<span class="text-secondary text-xs font-weight-bold">{{item.member.memberId}}</span>
								</td>
								<td>
									<div class="d-flex px-2 py-1">
										<div class="d-flex flex-column justify-content-center">
											<h6 class="mb-0 text-sm">{{item.member.memberName}}</h6>
										</div>
									</div>
								</td>
								<td>
									<p class="text-xs font-weight-bold mb-0">{{item.member.memberGender}}</p>

								</td>
								<td class="align-middle text-center text-sm">
									<h6 class="mb-0 text-sm">{{item.member.memberBirthday}}</h6>
								</td>
								<td class="align-middle text-center text-sm">
									<h6 class="mb-0 text-sm">{{item.member.memberPhone}}</h6>
								</td>
								<td class="align-middle text-center">
									<span class="text-secondary text-xs font-weight-bold">{{item.member.memberEmail}}</span>
								</td>
								<td class="align-middle text-center">
									<span class="text-secondary text-xs font-weight-bold">{{item.member.memberAdress}}</span>
								</td>
								<td class="align-middle">
									@*	<a :href="'Details?id='+item.backEndProduct.productId">*@
									<button class="btn bg-gradient-info mb-0 toast-btn" data-bs-toggle="modal" data-bs-target="#edirModal" v-on:click="editConfirm(item)">編輯</button>
									<button class="btn bg-gradient-danger  mb-0 toast-btn unState" v-on:click="deleteCheck(item)">刪除</button>
								</td>

							</tr>

						</tbody>
					</table>
				</div>
			</div>
		
			<div class="modal fade " id="edirModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
				<div class="modal-dialog modal-dialog-centered modal-dialog-scrollable">
					<div class="modal-content">
						<div class="modal-header">
							<h5 class="modal-title" id="edirModal">修改會員資料</h5>
							<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
						</div>
						<div class="modal-body">
							<div class="form-group">
								<label for="memberName" class="form-label">姓名:</label>
								<input class="form-control" v-model="editmember.memberName" id="memberName" type="text" required />
							</div>
							<div class="form-group">
								<label class="form-label" for="memberGender">性別:</label>
								<select v-model="editmember.memberGender" id="memberGender">
									<option value="">性別</option>
									<option value="1">男</option>
									<option value="0">女</option>
								</select>
							</div>
							<div class="form-group">
								<label class="form-label" for="memberBirthday">生日:</label>
								<input class="form-control" type="date" v-model="editmember.memberBirthday" id="memberBirthday" required />
							</div>
							<div class="form-group">
								<label class="form-label" for="memberPhone">手機號碼:</label>
								<input class="form-control" v-model="editmember.memberPhone" id="memberPhone" maxlength="10" type="text" required />
							</div>
							<div class="form-group">
								<label class="form-label" for="memberAdress">地址:</label>
								<input class="form-control" v-model="editmember.memberAdress" id="memberAdress" type="text" />
							</div>
							<div class="form-group">
								<label class="form-label" for="memberEmail">Email:</label>
								<input class="form-control" v-model="editmember.memberEmail" id="memberEmail" type="email" />
							</div>
						</div>
						<div class="modal-footer">
							<button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="CloseInsertPage">關閉</button>
							<button type="button" class="btn btn-primary" v-on:click="editMember">修改</button>
						</div>
					</div>
				</div>
			</div>
			<paginate :page-count="5"
					  :click-handler="ChangePage"
					  :prev-text="'前一頁'"
					  :next-text="'下一頁'"
					  :page-class="'page-item'"
					  :page-link-class="'page-link'"
					  :prev-class="'page-item'"
					  :prev-class-link="'page-link'"
					  :next-class="'page-item'"
					  :next-class-link="'page-link'"
					  :container-class="'className'">
			</paginate>
		</div>
	</div>
</div>


@section Scripts{
	<script src="https://cdn.jsdelivr.net/npm/vue@2.7.14/dist/vue.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<script src="https://unpkg.com/vuejs-paginate@0.9.0"></script>

	<script>
		Vue.component('paginate', VuejsPaginate)
		let app = new Vue({
			el: '#app',
			data: {
				originMember:[],
				members: [],
				keyword: "",
				//memberName:"",
				//memberPhone:"",
				//memberEmail:"",
				//memberAdress:"",
				//memberBirthday:"",
				//memberGender:"",
				editmember:{
					memberId:0,
					memberName:"",
					memberPhone: "",
					memberEmail: "",
					memberAdress: "",
					memberBirthday: "",
					memberGender: "",
				},
			},
			mounted: function () {
				let self = this;
				self.getMember();

			},
			methods: {
				getMember: function () {
					let self = this;
					axios.get('/api/member/all').then(res => self.originMember = self.members = res.data)
				},
				editMember: function () {
					let self = this;
					alert("f");
					let request={
						MemberId :self.editmember.memberId,
						MemberName: self.editmember.memberName,
						MemberPhone: self.editmember.memberPhone,
						MemberEmail : self.editmember.memberEmail,
						MemberAdress: self.editmember.memberAdress,
						MemberBirthday: new Date(self.editmember.memberBirthday),
						MemberBirthday: new Date(2022/02/01),
						MemberGender: self.editmember.memberGender
					}
					axios.post(`/api/member/EditMember`, this.editmember).then(res => {

						this.editmember.memberId=""
						this.editmember.memberName=""
						this.editmember.memberPhone=""
						this.editmember.memberEmail=""
						this.editmember.memberAdress=""
						this.editmember.memberBirthday=""
						 this.editmember.memberGender=""
						alert(res.data)
						self.getMember();


					})
				},
				editConfirm: function (item) {
					//alert('yes');
					this.editmember.memberId = item.member.memberId;
					this.editmember.memberName = item.member.memberName;
					this.editmember.memberGender = item.member.memberGender;
					this.editmember.memberEmail = item.member.memberEmail;
					this.editmember.memberPhone = item.member.memberPhone;
					this.editmember.memberAdress = item.member.memberAdress;
					this.editmember.memberBirthday = new Date( item.member.memberBirthday);

				},
				showInsertPage: function (item) {
					let self=this;
					let member = {

									memberName :item.memberName,
									memberPhone : item.memberPhone,
									memberEmail : item.memberEmail,
									memberAdress : item.memberAdress,
									memberBirthday : item.memberBirthday,
									memberGender : item.memberGender,

								};
					const myModal = new bootstrap.Modal('#insertPage')
					myModal.show(member);
				},
				CloseInsertPage: function () {
					const myModal = new bootstrap.Modal('#insertPage')
					myModal.hide();
				},
				deleteMember: function (id) {
					let self = this;
					axios.delete(`/api/member/deletemember/${id}`).then(res => {
						alert(res.data);
						self.getMember();
					})
				},
				deleteCheck: function (item) {
					let _this = this;
					Swal.fire({
						title: `確定要此刪除嗎?`,
						text: `會員編號:${item.member.memberId}，會員名稱:${item.member.memberName}`,
						icon: 'warning',
						showCancelButton: true,
						confirmButtonColor: '#3085d6',
						cancelButtonColor: '#d33',
						confirmButtonText: '刪除',
						cancelButtonText: '取消',
					}).then((result) => {
						if (result.isConfirmed) {
							_this.deleteMember(item.member.memberId);
							Swal.fire(
								'Deleted!',
								'Your file has been deleted.',
								'success'
							)
						}
					})
				},

				filtermember: function () {
					let self = this;
					self.members = self.originMember;
					self.members = self.members.filter(x => 
						(x.member.memberName && x.member.memberName.includes(self.keyword)) ||
						(x.member.memberPhone && x.member.memberPhone.includes(self.keyword)) ||
						(x.member.memberEmail && x.member.memberEmail.includes(self.keyword))
					);
				},
				ChangePage: function (currentpage) {
					console.log(currentpage);
				},
				
			},
			computed: {
				PageCount: function () {
					return Math.ceil(this.members.length / 5);
				}
			}

		})
	</script>
}
