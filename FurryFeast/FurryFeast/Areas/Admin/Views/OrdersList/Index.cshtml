@model IEnumerable<Order>

@{
	ViewData["Title"] = "Index";
}

@section Style{
	<style>
		.unState { background-color: gray; }

		.btnState { display: inline-block; }

		.drop {
			background-color: #ffedad;
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
			color: #3b3b3b;
		}

		.drop:hover { background-color: #ffce78; }

		.btn-secondary:hover { box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12); }

		input {
			border: 1px solid #ccc;
			border-radius: 6px;
			height: 30px;
			outline-style: none;
			padding-left: 5px;
			width: 100%;
		}

		.h1Header > h4 {
			padding-bottom: 17px;
			position: relative;
		}

		.h1Header > h4:before {
			background: #ccc;
			bottom: 6px;
			content: "";
			height: 4px;
			left: 25px;
			position: absolute;
			width: 100%;
		}

		.inActive { background: gray; }

		.inActive > td > span { color: black; }

		.checked-class {
			background-color: lightblue;
			color: cadetblue
		}

		.nBtn {
			background: none;
			border-radius: 6px;
			font-size: 14px;
			padding: 10px;
		}

		.btn_gray {
			background: white;
			border: 1px solid gray;
			color: gray;
		}

		.btn_gray:hover {
			background: white;
			border: 1px solid black;
			color: black;
		}

		.btn_green {
			background: yellowgreen;
			border: 1px solid yellowgreen;
			color: white;
			padding: 10px 20px;
		}

		.btn_green:hover {
			background: white;
			border: 1px solid yellowgreen;
			color: black;
		}

		.btn_red {
			background: firebrick;
			border: none;
			color: white;
		}

		.box {
			background: white;
			border: 1px solid rgb(235 235 235);
			border-radius: 1rem;
			padding: 10px 0px 10px 0px;
			padding-bottom: 10px;
		}

		input .checkbox { height: auto; }

	</style>
}

<div class="container-fluid" id="app">
	<div class="p-0 position-relative mt-n4 mx-3 z-index-2">
		<div class="border-radius-lg pt-4 ">
			<div class="mx-2 h1Header col-7 ">
				<h4 style="display: inline-block;" class="ms-1 m-0">Orders</h4>
				<h2 style="display: inline-block;" class="mt-3 mx-2">Index</h2>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-12">
			<div class="box my-4">
				<div class="row m-0 p-0">
					@*訂單管理*@
					<div class="col m-4 align-items-start">
						<button class="nBtn btn_red mb-0 me-2 dropdown-toggle" type="button" id="dropdownMenu2" data-bs-toggle="dropdown" aria-expanded="false">
							訂單專區
						</button>
						<ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
							<li><button class="dropdown-item" type="button" v-on:click="getData">全部訂單</button></li>
							<li><button class="dropdown-item" type="button" v-on:click="Active(1)">已付款</button></li>
							<li><button class="dropdown-item" type="button" v-on:click="Active(0)">未付款</button></li>
						</ul>

						<button type="button" class="btn mb-0 " style="border: 1px solid goldenrod; color: goldenrod;" v-on:click="selectAll">全部勾選</button>
						<button type="button" class="btn mb-0 " style="border: 1px solid goldenrod; color: goldenrod;" v-on:click="deselectAll">取消勾選</button>
						<button type="button" class="btn mb-0 " style="background: gray; color: white;" v-on:click="setActive">未付款</button>
						<button type="button" class="btn mb-0 " style="background: #3b3b3b; color: white;" v-on:click="setInative">已付款</button>

					</div>
					@*搜尋欄*@
					<div class="ms-md-auto pe-md-3 d-flex align-items-center col-3 mx-4">
						<div class="input-group input-group-outline">
							<label class="form-label">請輸入訂單編號</label>
							<input id="search" type="text" class="form-control h-100" v-on:keyup="searchBar" v-model="keyword">
						</div>
					</div>

				</div>

				<div class="p-0 pb-2">
					<div class="table-responsive p-0">
						<table class="table align-items-center mb-0">
							<thead>
							<tr>
								<th style="padding: 0;"></th>
								<th class="text-center text-xs font-weight-bolder">訂單編號</th>
								<th class="text-center text-xs font-weight-bolder">會員ID</th>
								<th class="text-center text-xs font-weight-bolder">會員帳號</th>
								<th class="text-center text-xs font-weight-bolder">訂單成立日期</th>
								<th class="text-center text-xs font-weight-bolder">出貨日期</th>
								<th class="text-center text-xs font-weight-bolder">總金額</th>
								<th class="text-center text-xs font-weight-bolder">付款狀態</th>
								<th class="text-center text-xs font-weight-bolder">明細</th>
							</tr>
							</thead>
							<tbody>
							<tr id="info" v-for="(item, index) in ordersData" :key="index" :class="{ 'checked-class': item.checked }">
								<td class="ms-2">
									<input type="checkbox" class="checkbox" v-model="item.checked" v-on:click="checkBoxArr(item)">
								</td>
								<template >
									<td class="align-middle text-center text-xs font-weight-bold">
										<span class="">{{item.orderId}}</span>
									</td>
									<td class="align-middle text-center text-xs font-weight-bold">
										<span>{{item.memberId}}</span>
									</td>
									<td class="align-middle text-center  text-xs font-weight-bold">
										<span>{{item.memberAccount}}</span>
									</td>
									<td class="align-middle text-center  text-xs font-weight-bold">
											<span>{{formatDate(item.orderCreateDate)}}</span>
									</td>
									<td class="align-middle text-center text-xs font-weight-bold">
											<span>{{formatDate(item.orderShipDate)}}</span>
									</td>
									<td class="align-middle text-center text-xs font-weight-bold">
										<span>{{item.orderTotalPrice}}</span>
									</td>
									<template v-if="item.orderStatus==0">
										<td class="align-middle text-center text-xs font-weight-bold"><button type="button" class="btn mb-0 " style="background: gray; color: white;" v-on:click="setActive">未付款</button></td>
									</template>
									<template v-else>
										<td class="align-middle text-center text-xs font-weight-bold"><button type="button" class="btn mb-0 " style="background: #3b3b3b; color: white;" v-on:click="setInative">已付款</button></td>
									</template>
									<td>
										<button class="btn mb-0" style="background: dodgerblue">
											<a style="color: white" :href="'Details/'+item.orderId">觀看明細</a>
										</button>
									</td>
								</template>
							</tr>
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts
{
	<script src="https://unpkg.com/dayjs@1.8.21/dayjs.min.js"></script>

	<script>
		var app = new Vue({
			el: '#app',
			data: {
				selectArr: [],
				OrderShipDate: "",
				OrderCreateDate: "",
				ordersData: [],
				originalOrdersData:[],
				keyword: ""
			},
			mounted: function() {
				let _this = this;
				_this.getData();

			},
			methods: {
				getData: function() {
					let _this = this;
					axios.get('/api/orders/GetData').then(response => {
						_this.ordersData = response.data;
						_this.originalOrdersData = [...response.data];
						console.log(_this.ordersData);

						_this.OrderShipDate = _this.setDate(_this.ordersData[0].orderShipDate);
						_this.OrderCreateDate = _this.setDate(_this.ordersData[0].orderCreateDate);

					}).catch(error => { console.error(error); });

				},
				setDate: function(Date) {
					return dayjs(Date).format('YYYY-MM-DD ddd HH:mm:ss');
				},
				// 未付款
				setInative: function() {
					let _this = this;
					_this.selectArr.forEach((item) => {
						if (item.orderStatus == 0) {
							item.orderStatus = 1;
						}
						axios.post('/api/orders/UpdateActive', { OrderId: item.orderId, OrderStatus: item.orderStatus })
							.then(response => {
								console.log(response.data);
								_this.getData();
							})
							.catch(error => {
								console.error(error);
							});
					});
					// 取消勾選
					_this.ordersData = _this.ordersData.map(item => ({ ...item, checked: false }));
					_this.selectArr = [];

				},
				//已付款
				setActive: function() {
					let _this = this;
					_this.selectArr.forEach((item) => {
						if (item.orderStatus == 1) {
							item.orderStatus = 0;
						}
						console.log(item.orderId);
						axios.post('/api/orders/UpdateActive', { OrderId: item.orderId, OrderStatus: item.orderStatus })
							.then(response => {
								console.log(response.data);
								_this.getData();
							})
							.catch(error => {
								console.error(error);
							});
					});
					// 取消勾選
					_this.deselectAll();
				},
				selectAll: function() {
					let _this = this;
					_this.selectArr = [];
					_this.ordersData = _this.ordersData.map(item => ({ ...item, checked: true }));
					_this.ordersData.forEach((item) => {
						if (item.orderStatus === 0 || item.orderStatus === 1) {
							_this.selectArr.push({ orderId: item.orderId, orderStatus: item.orderStatus });
						}
					});
					console.log(_this.selectArr);
				},

				deselectAll: function() {
					let _this = this;
					_this.ordersData = _this.ordersData.map(item => ({ ...item, checked: false }));
					_this.selectArr = [];
				},

				checkBoxArr: function(item) {
					const _this = this;
					const exists = _this.selectArr.some((x) => x.orderId === item.orderId);
					if (!exists) {
						_this.selectArr.push({ orderId: item.orderId, orderStatus: item.orderStatus });
					} else {
						_this.selectArr = _this.selectArr.filter((x) => x.orderId !== item.orderId);
					}

					console.log(_this.selectArr);
					console.log(item.orderId);
				},
				searchBar: function() {
					let _this = this;
					if (_this.keyword !== "") {
						_this.ordersData = _this.originalOrdersData.filter(item => item.orderId == _this.keyword);
					} else {
						_this.ordersData = [..._this.originalOrdersData];
					}
				},
				Active: function(num) {
					let _this = this;
					_this.ordersData = [..._this.originalOrdersData];
					_this.ordersData = _this.originalOrdersData.filter(item => item.orderStatus == num);
				},
				formatDate: function (dateString) {
					return moment(dateString).format('YYYY/MM/DD h:mm:ss a');
				}
			}
		})
	</script>
}