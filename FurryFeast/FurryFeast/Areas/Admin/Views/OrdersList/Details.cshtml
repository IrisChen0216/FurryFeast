@model FurryFeast.Models.Order

@{
    ViewData["Title"] = "Details";
}

@section Style
	{
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
	<style>

		.inputbox {
			font-size: 14px;
			letter-spacing: 0.5px;
			border: none;
			background: none;
			height: 50px;
			border-bottom: 1px dashed #ccc;
		}

		.inputbox:focus {
			outline: none;
			border-color: gray
		}

		.btn-secondary:hover {
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		}

/*		tbody tr:last-of-type {
			border-bottom: 1px solid #f0f2f5;
		}*/

		.btn-typeId {
			border: 1px solid black;
			color: black;
			border-radius: 6px;
			margin-right: 5px;
		}

		.h1Header > h4 {
			position: relative;
			padding-bottom: 17px;
		}

		.h1Header > h4:before {
			content: "";
			position: absolute;
			left: 25px;
			bottom: 6px;
			width: 100%;
			height: 4px;
			background: #ccc;
		}

		.box {
			background: white;
			border-radius: 1rem;
			padding-bottom: 10px;
			padding: 15px 20px;
			border: 1px solid rgb(235 235 235);
			font-size: 14px;
		}

		.title {
			vertical-align: initial;
			font-weight: bold;
			font-size: 15px;
			display: block;
			text-align: right;
		}

		.text {
			font-size: 13px;
			letter-spacing: 2px;
		}

		.orderTable {
			width: 100%;
		}

		.nBtn {
			background: none;
			padding: 10px;
			font-size: 14px;
			border-radius: 6px;
		}

		.btn_gray {
			background: white;
			border: 1px solid gray;
			color: gray;
		}

		.btn_gray:hover {
			border: 1px solid black;
			background: white;
			color: black;
		}

		.btn_green {
			padding: 10px 20px;
			border: 1px solid yellowgreen;
			background: yellowgreen;
			color: white;
		}

		.btn_green:hover {
			border: 1px solid yellowgreen;
			background: white;
			color: black;
		}

	</style>
}


<div class="container m-3" style="width:95%" id="app">
	<div class="mx-2 row">
		<div class=" h1Header col">
			<h4 style="display: inline-block;" class="ms-1 m-0">Order</h4>
			<h2 style="display: inline-block;" class="mt-3 mx-2">Details</h2>
		</div>
	</div>
	<div class="text-end">
		<button class="nBtn btn_gray mb-3" :href="'index'">回到訂單列表</button>
	</div>

	<div class="box row" v-for="item in orderData">
		<div class="col">
			<h4 class=" col mt-3">訂單資訊</h4>
			<div class="box mb-4 mt-3 ">
				<table class="orderTable">
					<tr>
						<td><span class="title">訂單編號</span></td>
						<td><input class="inputbox ms-3" type="text" v-model="item.orderId" disabled /></td>
					</tr>
					<tr>
						<td><span class="title">訂單成立時間</span></td>
						<td><input class="inputbox ms-3" type="text" v-model="OrderCreateDate" disabled /></td>
					</tr>
					<tr>
						<td><span class="title">出貨時間</span></td>
						<td><input class="inputbox ms-3" type="text" v-model="OrderShipDate" disabled />
					</tr>
				</table>
			</div>
		</div>
		<div class="col">
			<h4 class="mt-3 px-2">會員資料</h4>
			<div class="box mb-4 mt-3">
				<table class="orderTable">
					<tbody>
						<tr>
							<td><span class="title">會員編號</span></td>
							<td><input class="inputbox ms-3" type="text" v-model="item.memberId" disabled></td>
						</tr>
						<tr>
							<td><span class="title">會員名稱</span></td>
							<td><input class="inputbox ms-3" type="text" v-model="item.memberName" disabled/></td>
						</tr>
						<tr>
							<td><span class="title">會員帳號</span></td>
							<td><input class="inputbox ms-3" type="text" v-model="item.memberAccount" disabled/>
						</tr>
					</tbody>
				</table>
			</div>
		</div>
		<div>
			<h4 class="mt-3 ps-2">購買明細</h4>
			<div class="box mb-4 mt-3">
				<table class="table align-items-center mb-0">
					<thead>
					<tr>
						<th class=" font-weight-bolder opacity-7 text-center">商品編號</th>
						<th class=" font-weight-bolder opacity-7 text-center">商品名稱</th>
						<th class=" font-weight-bolder opacity-7 text-center">商品單價</th>
						<th class=" font-weight-bolder opacity-7 text-center">購買數量</th>
						<th class=" font-weight-bolder opacity-7 text-center">總金額</th>
					</tr>
					</thead>
					<tbody>
					<tr style="height: 50px" v-for="item in orderData[0].orderDetail">
						<td class="align-middle text-center">
							<span class="text-secondary font-weight-bold">{{item.productId}}</span>
						</td>
						<td class="align-middle text-center">
							<span class="text-secondary font-weight-bold">{{item.productName}}</span>
						</td>
						<td class="align-middle text-center">
							<span class="text-secondary font-weight-bold">{{item.productPrice}}</span>
						</td>
						<td class="align-middle text-center">
							<span class="text-secondary font-weight-bold">{{item.orderQuantity}}</span>
						</td>
						<td class="align-middle text-center">
							<span class="text-secondary font-weight-bold">{{item.orderPrice}}</span>
						</td>
					</tr >
					<tr style="height: 50px; font-size: 25px;">
						<td colspan="3"></td>
						<td class="align-middle text-center">
							<span class="text-secondary font-weight-bold">總計</span>
						</td>
						<td class="align-middle text-center">
							<span class="text-secondary font-weight-bold">{{item.orderTotalPrice}}</span>
						</td>
					</tr>
					</tbody>
				</table>
			</div>
		</div>
		<div>
			<h4 class="mt-3 ps-2" style="display: inline-block; vertical-align: sub;">收件者明細</h4>
			<template v-if="isEdit == false">
				<button class="nBtn btn_green m-0 ms-3" v-on:click="edit">編輯</button>
			</template>
			<template v-else>
				<button class="nBtn btn_green m-0 ms-3" v-on:click="update">更新</button>
				<button class="m-0 nBtn btn_gray ms-2" v-on:click="cancel">取消編輯</button>
			</template>
			<div class="box mb-4 mt-3">
				<table v-for="item in orderData">
					<tr>
						<td class=" font-weight-bolder opacity-7 text-center" style="width: 10%">收件者</td>
						<td><input class="inputbox ms-2" style="width: 50%;" type="text" v-model="editingRecipient" v-bind:disabled="isDisabled"/></td>
					</tr>
					<tr>
						<td class=" font-weight-bolder opacity-7 text-center">收件者地址</td>
						<td><input class="inputbox ms-2" style="width: 50%;" type="text" v-model="editingRecipientAdress" v-bind:disabled="isDisabled"/></td>
					</tr>
					<tr>
						<td class=" font-weight-bolder opacity-7 text-center">收件者電話</td>
						<td><input class="inputbox ms-2" style="width: 50%;" type="text" v-model="editingRecipientPhone" v-bind:disabled="isDisabled"/></td>
					</tr>
				</table>
			</div>
		</div>
	</div>
</div>

@section Scripts{
	<script src="https://unpkg.com/dayjs@1.8.21/dayjs.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

	<script>
		let app = new Vue({
			el: '#app',
			data: {
				isEdit: false,
				isDisabled: true,
				orderData: [],
				editingRecipient: "",
				editingRecipientAdress: "",
				editingRecipientPhone: "",
				OrderCreateDate: "",
				OrderShipDate: ""
			},
			mounted: function() {
				let _this = this;
				_this.orderDetail();
			},
			methods: {
				orderDetail: function() {
					let _this = this;
					let ID = @ViewBag.orderId;
					axios.get(`/api/orders/GetData/${ID}`).then(response => {
						_this.orderData = response.data;
						console.log(_this.orderData);
						_this.orderData.forEach(function(item, i) {
							_this.editingRecipient = item.orderRecipientName;
							_this.editingRecipientAdress = item.orderRecipientAdress;
							_this.editingRecipientPhone = item.orderRecipientPhone;
						});
						_this.OrderShipDate = _this.setDate(_this.orderData[0].orderShipDate);
						_this.OrderCreateDate = _this.setDate(_this.orderData[0].orderCreateDate);

					});
				},
				setDate: function(Date) {
					return dayjs(Date).format('YYYY-MM-DD ddd HH:mm:ss');
				},

				edit: function() {
					let _this = this;
					_this.isEdit = true;
					_this.isDisabled = false;
				},

				cancel: function() {
					let _this = this;
					_this.isEdit = false;
					_this.isDisabled = true;

					_this.editingRecipient = _this.orderData[0].orderRecipientName;
					_this.editingRecipientAdress = _this.orderData[0].orderRecipientAdress;
					_this.editingRecipientPhone = _this.orderData[0].orderRecipientPhone;

				},
				update: function() {
					let _this = this;
					_this.isEdit = false;
					_this.isDisabled = true;
					
					_this.orderData.orderRecipientName = _this.editingRecipient;
					_this.orderData.orderRecipientAdress = _this.editingRecipientAdress;
					_this.orderData.orderRecipientPhone = _this.editingRecipientPhone;

					var request = {
							OrderId: _this.orderData[0].orderId,
							OrderRecipientName: _this.orderData.orderRecipientName,
							OrderRecipientAdress: _this.orderData.orderRecipientAdress,
							OrderRecipientPhone: _this.orderData.orderRecipientPhone
					};

					axios.post(`/api/orders/Update/`, request).then(response => {
						console.log(response.data);
						if (response.data.success) {
							_this.Success();
						}
						//setTimeout(() => {
						//		window.location.href = '/Admin/RecipesList/index'; // 轉向 index 頁面
						//	},
						//	1500);
					});

				}
			}, 
			Success: function() {
			Swal.fire({
				position: 'center',
				icon: 'success',
				title: '更新收件者資料成功',
				text: '回到列表',
				showConfirmButton: false,
				timer: 1500
			});
			}, 
			Errorrrr: function() { 
				Swal.fire({ 
					position: 'center', 
					icon: 'warning', 
					title: '您未更新任何資料', 
					text: '請重新編輯', 
					showConfirmButton: false, 
					timer: 2000
				});
			}
		});
	</script>
}