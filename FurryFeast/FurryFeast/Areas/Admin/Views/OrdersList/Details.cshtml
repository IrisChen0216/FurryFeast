@model FurryFeast.Models.Order

@{
    ViewData["Title"] = "Details";
}

@section Style
	{
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
	<style>

		.inputbox {
			font-size: 14px;
			letter-spacing: 0.5px;
			border: none;
			background: none;
			height: 40px;
			border-bottom: 1px solid #ccc;
			padding: 0px 0px 0px 5px;
		}

			.inputbox:focus {
				outline: none;
				border-color: gray
			}

		.btn-secondary:hover {
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		}

		.btn-typeId {
			border: 1px solid black;
			color: black;
			border-radius: 6px;
			margin-right: 5px;
		}

		.h1Header > h4 {
			position: relative;
			padding-bottom: 17px;
		}

			.h1Header > h4:before {
				content: "";
				position: absolute;
				left: 25px;
				bottom: 6px;
				width: 100%;
				height: 4px;
				background: #ccc;
			}

		.box {
			background: white;
			border-radius: 1rem;
			padding-bottom: 10px;
			padding: 50px 50px 15px 50px;
			border: 1px solid rgb(235 235 235);
			font-size: 14px;
		}

		.recipeName {
			vertical-align: initial;
			font-weight: bold;
			font-size: 15px
		}

		.recipeText {
			font-size: 13px;
			letter-spacing: 2px
		}
	</style>
}


<div class="container m-3" style="width:95%" id="app">
	<div class="mx-2 row">
		<div class=" h1Header col">
			<h4 style="display: inline-block;" class="ms-1 m-0">Order</h4>
			<h2 style="display: inline-block;" class="mt-3 mx-2">Details</h2>
		</div>
	</div>
	<div class="text-end pe-2">
		<template v-if="false">
			<button class="btn m-0" style="background: yellowgreen; color: white" v-on:click="update">更新</button>
			<button class="btn m-0" style="background: darkgray"><a style="color: white" :href="'index'">取消</a></button>
		</template>
		<template v-elas>
			<button class="btn m-0" style="background: black; color: white">編輯</button>
			<button class="btn m-0" style="background: yellowgreen; color: white" :href="'index'">回到訂單明細</button>
		</template>
	</div>
	<div class="box mt-3" v-for="item in orderData">
		<div class="mb-4">
			<div class="col">
				<span class="recipeName">訂單編號</span>
				<input class="inputbox ms-2" type="text" v-model="item.orderId" />
			</div>
			<div class="col" style="font-size: 13px;">
				<span class="recipeName">訂單成立時間</span>
				<input class="inputbox ms-2" type="text" v-model="item.orderCreateDate" />
			</div>
			<div class="col" style="font-size: 13px;">
				<span class="recipeName">會員編號</span>
				<input class="inputbox ms-2" type="text" v-model="item.memberId" />
			</div>
			<div class="col" style="font-size: 13px;">
				<span class="recipeName">會員名稱</span>
				<input class="inputbox ms-2" type="text" v-model="item.memberName" />
			</div>
			<div class="my-4">
				<div class="mb-4 mt-3">
					<p class="recipeName">購買明細</p>
					<span class="recipeName">商品名稱</span>
					<input class="inputbox ms-2" type="text" v-model="item.orderDetail[0].productName" />
					<span class="recipeName">商品價格</span>
					<input class="inputbox ms-2" type="text" v-model="item.orderDetail[0].productPrice" />
					<span class="recipeName">購買數量</span>
					<input class="inputbox ms-2" type="text" v-model="item.orderDetail[0].orderQuantity" />
					<span class="recipeName">商品金額</span>
					<input class="inputbox ms-2" type="text" v-model="item.orderDetail[0].orderPrice" />
					<span class="recipeName">總金額</span>
					<input class="inputbox ms-2" type="text" v-model="item.orderTotalPrice" />
					<div class="ms-1 mt-1" v-for="(item, index) in editingRecipeData" :key="index">
						<input class="inputbox" style="width:80%" type="text" v-model="editingRecipeData[index]" />
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="box mt-3" v-for="item in orderData">
		<div class="mb-4 mt-3">
			<p class="recipeName">收件者明細</p>
			<span class="recipeName">收件者名稱</span>
			<input class="inputbox ms-2" type="text" v-model="item.orderRecipientName" />
			<span class="recipeName">收件者地址</span>
			<input class="inputbox ms-2" type="text" v-model="item.orderRecipientAdress" />
			<span class="recipeName">收件者電話</span>
			<input class="inputbox ms-2" type="text" v-model="item.orderRecipientPhone" />
			<span class="recipeName ">出貨時間</span>
			<input class="inputbox ms-2" type="text" v-model="item.orderShipDate" />
		</div>
	</div>
</div>


@section Scripts{
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>
		let app = new Vue({
			el: '#app',
			data: {
				orderData: [],
				editingRecipeTitle: "",
				editingRecipeDesr: "",
				editingType: "",
				editingRecipeData: [],
				editingRecipeMethod: [],
				editingNotes: ""
			},
			mounted: function () {
				let _this = this;
				_this.orderDetail();
			},
			methods: {
				orderDetail: function () {
					let _this = this;
					let ID = @ViewBag.orderId;
					axios.get(`/api/orders/GetData/${ID}`).then(response => {
						_this.orderData = response.data;
						console.log(_this.orderData);

						//_this.editingRecipeTitle = _this.recipesData[0].recipesName;
						//_this.editingRecipeDesr = _this.recipesData[0].recipesDescription;
						//_this.editingType = _this.recipesData[0].petTypesId;
						//_this.editingRecipeData = _this.recipesData[0].recipesData.split("/");
						//_this.editingRecipeMethod = _this.recipesData[0].recipesMethod.split("/");
						//_this.editingNotes = _this.recipesData[0].recipesNotes;
						//console.log(_this.editingRecipeData);
					});

				},
				addDataInput: function () {
					let _this = this;
					let newItem = "";
					_this.editingRecipeData.push(newItem);
				},
				addMethodInput: function () {
					let _this = this;
					let newItem = "";
					_this.editingRecipeMethod.push(newItem);
				},
				minusDataInput: function (item) {
					let _this = this;
					_this.editingRecipeData = _this.editingRecipeData.filter(function (i) {
						return i !== item;
					});
					console.log(_this.editingRecipeData);
				},
				minusMethodInput: function (item) {
					let _this = this;
					_this.editingRecipeMethod = _this.editingRecipeMethod.filter(function (i) {
						return i !== item;
					});
					console.log(_this.editingRecipeMethod);
				},

				cancel: function () {
					let _this = this;
					_this.recipesData[0].recipesName = _this.editingRecipeTitle;
					_this.recipesData[0].recipesDescription = _this.editingRecipeDesr;
					_this.recipesData[0].petTypesId = _this.editingType;
					_this.recipesData[0].recipesData = _this.editingRecipeData;
					_this.recipesData[0].recipesMethod = _this.editingRecipeMethod;
					_this.recipesData[0].recipesNotes = _this.editingNotes;
				},
				update: function () {
					let _this = this;
					_this.recipesData[0].recipesName = _this.editingRecipeTitle;
					_this.recipesData[0].recipesDescription = _this.editingRecipeDesr;
					_this.recipesData[0].petTypesId = _this.editingType;
					_this.recipesData[0].recipesData = _this.editingRecipeData.join('/');
					_this.recipesData[0].recipesMethod = _this.editingRecipeMethod.join('/');
					_this.recipesData[0].recipesNotes = _this.editingNotes;

					console.log(_this.recipesData[0].recipesMethod);

					var request = {
						RecipesId: _this.recipesData[0].recipesId,
						RecipesName: _this.recipesData[0].recipesName,
						RecipesDescription: _this.recipesData[0].recipesDescription,
						PetTypesId: _this.recipesData[0].petTypesId,
						RecipesData: _this.recipesData[0].recipesData,
						RecipesMethod: _this.recipesData[0].recipesMethod,
						RecipesNotes: _this.recipesData[0].recipesNotes
					};

					console.log(request);

					axios.post(`/api/recipes/UpdateRecipe/`, request).then(response => {
						console.log(response.data);
						_this.Success();
						setTimeout(() => {
							window.location.href = '/Admin/RecipesList/index'; // 轉向 index 頁面
						},
							1500);

					});
				},
				Success: function () {
					Swal.fire({
						position: 'center',
						icon: 'success',
						title: '編輯食譜成功',
						text: '回到文章列表',
						showConfirmButton: false,
						timer: 1500
					});
				}
			}
		});

	</script>
}