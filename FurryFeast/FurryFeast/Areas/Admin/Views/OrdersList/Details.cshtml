@model FurryFeast.Models.Order

@{
    ViewData["Title"] = "Details";
}

@section Style
	{
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
	<style>

		.inputbox {
			font-size: 14px;
			letter-spacing: 0.5px;
			border: none;
			background: none;
			height: 50px;
			border-bottom: 1px dashed #ccc;
			padding: 0px 0px 0px 5px;
		}

			.inputbox:focus {
				outline: none;
				border-color: gray
			}

		.btn-secondary:hover {
			box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
		}

/*		tbody tr:last-of-type {
			border-bottom: 1px solid #f0f2f5;
		}*/

		.btn-typeId {
			border: 1px solid black;
			color: black;
			border-radius: 6px;
			margin-right: 5px;
		}

		.h1Header > h4 {
			position: relative;
			padding-bottom: 17px;
		}

			.h1Header > h4:before {
				content: "";
				position: absolute;
				left: 25px;
				bottom: 6px;
				width: 100%;
				height: 4px;
				background: #ccc;
			}

		.box {
			background: white;
			border-radius: 1rem;
			padding-bottom: 10px;
			padding: 15px 20px;
			border: 1px solid rgb(235 235 235);
			font-size: 14px;
		}

		.title {
			vertical-align: initial;
			font-weight: bold;
			font-size: 15px;
			text-align: center;
		}

		.text {
			font-size: 13px;
			letter-spacing: 2px
		}

		table td {
			text-align: right;
		}
	</style>
}


<div class="container m-3" style="width:95%" id="app">
	<div class="mx-2 row">
		<div class=" h1Header col">
			<h4 style="display: inline-block;" class="ms-1 m-0">Order</h4>
			<h2 style="display: inline-block;" class="mt-3 mx-2">Details</h2>
		</div>
	</div>
	<div class="text-end pe-2 mb-2">
		<button class="btn m-0" style="color: gray; font-size: 14px;" :href="'index'">回到訂單明細</button>
	</div>

	<div class="box row" v-for="item in orderData">
		<div class="col">
			<h4 class=" col mt-3">訂單資訊</h4>
			<div class="box mb-4 mt-3 ">
				<table >
					<tr>
						<td><span class="title">訂單編號</span></td>
						<td><input class="inputbox ms-3" type="text" v-model="item.orderId" disabled/></td>
					</tr>
					<tr>
						<td><span class="title">訂單成立時間</span></td>
						<td style="width: auto"><input class="inputbox ms-3" type="text" v-model="item.orderCreateDate" disabled/></td>
					</tr>
					<tr>
						<td><span class="title">出貨時間</span></td>
						<td><input class="inputbox ms-3" type="text" v-model="item.orderShipDate" disabled/>
					</tr>
				</table>
			</div>
		</div>
		<div class="col">
			<h4 class="mt-3 px-2">會員資料</h4>
			<div class="box mb-4 mt-3">
				<table>
					<tr>
						<td><span class="title">會員編號</span></td>
						<td><input class="inputbox ms-3" type="text" v-model="item.memberId" disabled></td>
					</tr>
					<tr>
						<td><span class="title">會員名稱</span></td>
						<td><input class="inputbox ms-3" type="text" v-model="item.memberName" disabled/></td>
					</tr>
					<tr>
						<td><span class="title">會員帳號</span></td>
						<td><input class="inputbox ms-3" type="text" v-model="item.memberAccount" disabled/>
					</tr>
				</table>
			</div>
		</div>
		<div>
			<h4 class="mt-3 ps-2">購買明細</h4>
			<div class="box mb-4 mt-3">
				<table class="table align-items-center mb-0">
					<thead>
					<tr>
						<th class=" font-weight-bolder opacity-7 text-center">商品編號</th>
						<th class=" font-weight-bolder opacity-7 text-center">商品名稱</th>
						<th class=" font-weight-bolder opacity-7 text-center">商品單價</th>
						<th class=" font-weight-bolder opacity-7 text-center">購買數量</th>
						<th class=" font-weight-bolder opacity-7 text-center">總金額</th>
					</tr>
					</thead>
					<tbody>
					<tr style="height: 50px" v-for="item in orderData[0].orderDetail">
						<td class="align-middle text-center">
							<span class="text-secondary font-weight-bold">{{item.productId}}</span>
						</td>
						<td class="align-middle text-center">
							<span class="text-secondary font-weight-bold">{{item.productName}}</span>
						</td>
						<td class="align-middle text-center">
							<span class="text-secondary font-weight-bold">{{item.productPrice}}</span>
						</td>
						<td class="align-middle text-center">
							<span class="text-secondary font-weight-bold">{{item.orderQuantity}}</span>
						</td>
						<td class="align-middle text-center">
							<span class="text-secondary font-weight-bold">{{item.orderPrice}}</span>
						</td>
					</tr >
					<tr style="height: 50px; font-size: 25px;">
						<td colspan="3"></td>
						<td class="align-middle text-center">
							<span class="text-secondary font-weight-bold">總計</span>
						</td>
						<td class="align-middle text-center">
							<span class="text-secondary font-weight-bold">{{item.orderTotalPrice}}</span>
						</td>
					</tr>
					</tbody>
				</table>
			</div>
		</div>
		<div>
			<h4 style="display: inline-block; vertical-align: sub;">收件者明細</h4>
			<template v-if="item.isEdit != true">
				<button class="btn m-0 ms-3" style="background: yellowgreen; color: white" v-on:click="edit(item)">編輯</button>
			</template>
			<template v-else>
				<button class="btn m-0 ms-3" style="background: yellowgreen; color: white" v-on:click="update">更新</button>
				<button class="btn m-0" style="background: darkgray"><a style="color: white" :href="'index'">取消</a></button>
			</template>
		</div>
		<div class="box mb-4 mt-3" v-for="item in orderData">
			<div>
				<span class="title">收件者名稱</span>
				<input class="inputbox ms-2" type="text" v-model="item.orderRecipientName" disabled/>
			</div>
			<div>
				<span class="title">收件者地址</span>
				<input class="inputbox ms-2" type="text" v-model="item.orderRecipientAdress" disabled/>
			</div>
			<div>
				<span class="title">收件者電話</span>
				<input class="inputbox ms-2" type="text" v-model="item.orderRecipientPhone" disabled/>
			</div>
		</div>
	</div>
</div>


@section Scripts{
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>
		let app = new Vue({
			el: '#app',
			data: {
				isEdit: false,
				orderData: [],
				editingRecipeTitle: "",
				editingRecipeDesr: "",
				editingType: "",
				editingRecipeData: [],
				editingRecipeMethod: [],
				editingNotes: ""
			},
			mounted: function() {
				let _this = this;
				_this.orderDetail();
			},
			methods: {
				orderDetail: function() {
					let _this = this;
					let ID = @ViewBag.orderId;
					axios.get(`/api/orders/GetData/${ID}`).then(response => {
						_this.orderData = response.data;

						for (let i = 0; i < _this.orderData.length; i++) {
							_this.orderData[i].isEdit = false;
						}
						console.log(_this.orderData);
					});
				},
				edit: function(item) {
					item.isEdit = false;
					console.log(item.isEdit);
				},

				cancel: function() {
					let _this = this;
					_this.orderData.isEdit = false;

					_this.recipesData[0].recipesName = _this.editingRecipeTitle;
					_this.recipesData[0].recipesDescription = _this.editingRecipeDesr;
					_this.recipesData[0].petTypesId = _this.editingType;
					_this.recipesData[0].recipesData = _this.editingRecipeData;
					_this.recipesData[0].recipesMethod = _this.editingRecipeMethod;
					_this.recipesData[0].recipesNotes = _this.editingNotes;
				},
				update: function() {
					let _this = this;
					_this.recipesData[0].recipesName = _this.editingRecipeTitle;
					_this.recipesData[0].recipesDescription = _this.editingRecipeDesr;
					_this.recipesData[0].petTypesId = _this.editingType;
					_this.recipesData[0].recipesData = _this.editingRecipeData.join('/');
					_this.recipesData[0].recipesMethod = _this.editingRecipeMethod.join('/');
					_this.recipesData[0].recipesNotes = _this.editingNotes;

					console.log(_this.recipesData[0].recipesMethod);

					var request = {
						RecipesId: _this.recipesData[0].recipesId,
						RecipesName: _this.recipesData[0].recipesName,
						RecipesDescription: _this.recipesData[0].recipesDescription,
						PetTypesId: _this.recipesData[0].petTypesId,
						RecipesData: _this.recipesData[0].recipesData,
						RecipesMethod: _this.recipesData[0].recipesMethod,
						RecipesNotes: _this.recipesData[0].recipesNotes
					};

					console.log(request);

					axios.post(`/api/recipes/UpdateRecipe/`, request).then(response => {
						console.log(response.data);
						_this.Success();
						setTimeout(() => {
								window.location.href = '/Admin/RecipesList/index'; // 轉向 index 頁面
							},
							1500);

					});
				},
				Success: function() {
					Swal.fire({
						position: 'center',
						icon: 'success',
						title: '編輯食譜成功',
						text: '回到文章列表',
						showConfirmButton: false,
						timer: 1500
					});
				}
			}
		});

	</script>
}