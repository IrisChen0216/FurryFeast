@{
	ViewData["Title"] = "StockArticle";
	Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section Style{
	<style>
		/*固定 table 高度*/
		.table-responsive {
			overflow: auto;
			height: 74.2vh;
		}
		/*選擇 table 效果*/
		.tableHover:hover {
			background-color: #DFE7F2;
			color: #000000;
			cursor: pointer;
		}
	</style>
}

<div class="container-fluid" id="app">
	<div class="row">
		<div class="col-12">
			<div class="card my-4">

				<div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
					<div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3 ">
						<h6 class="text-white text-capitalize ps-3">庫存管理</h6>
					</div>
				</div>

				<div class="row">
					<div class="btnState mx-3 mt-2 pr-10 col-3">
						<button class="btn bg-gradient-info  mb-0 toast-btn">新增</button>
						<button class="btn bg-gradient-danger  mb-0 toast-btn">刪除</button>
					</div>
				</div>

				<div class="row">
					<div class="col-md-2">
						<div class="card-body px-0 pb-2">
							<div class="table-responsive p-0">

								@*搜尋產品*@
								<div class="ms-md-auto mt-2 d-flex align-items-center">
									<div class="input-group input-group-outline">
										<label class="form-label">搜尋編號或名稱...</label>
										<input type="text" class="form-control" v-model="keyWord" v-on:keyup="productFilter">
									</div>
								</div>

								<table class="table align-items-center mb-0 strap">
									<thead>
										<tr>
											<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">編號</th>
											<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">名稱</th>
										</tr>
									</thead>
									<tbody>
										<tr class="tableHover" v-for="item in showData" v-on:click="clickArticle(item)">
											<td class="align-middle text-center">
												<span class="text-secondary text-xs font-weight-bold">{{item.articlesCode}}</span>
											</td>
											<td class="align-middle text-center">
												<span class="text-secondary text-xs font-weight-bold">{{item.articlesDescription}}</span>
											</td>
										</tr>
									</tbody>
								</table>
							</div>
						</div>
					</div>

					<div class="col-md-10">
						<div class="card-body px-0 pb-2">
							<div class="table-responsive p-3">

								<div class="row">
									<div class="col-md-4">
										<div class="input-group input-group-outline">
											<label class="form-label">編號</label>
											<input type="text" class="form-control" v-bind:value="tempData.articlesCode">
										</div>
									</div>
									<div class="col-md-4">
										<div class="input-group input-group-outline">
											<label class="form-label">描述</label>
											<input type="text" class="form-control" v-bind:value="tempData.articlesDescription">
										</div>
									</div>
									<div class="col-md-4">
										<div class="input-group input-group-outline">
											<label class="form-label">是否可選</label>
											<input type="text" class="form-control" v-bind:value="tempData.articlesIsValid">
										</div>
									</div>
								</div>

								<div class="input-group input-group-outline mt-2">
									<label class="form-label">備註</label>
									<input type="text" class="form-control" v-bind:value="tempData.articlesNotes">
								</div>
								<div class="input-group input-group-outline mt-2">
									<label class="form-label">價格</label>
									<input type="text" class="form-control" v-bind:value="tempData.articlesPrice">
								</div>
								<div class="input-group input-group-outline mt-2">
									<label class="form-label">數量</label>
									<input type="text" class="form-control" v-bind:value="tempData.articlesQuantity">
								</div>
								<div class="input-group input-group-outline mt-2">
									<label class="form-label">產品類別</label>
									<input type="text" class="form-control" v-bind:value="tempData.groupId">
								</div>
								<div class="input-group input-group-outline mt-2">
									<label class="form-label">圖片</label>
									<input type="text" class="form-control" v-bind:value="tempData.imagesId">
								</div>
								<div class="input-group input-group-outline mt-2">
									<label class="form-label">計量單位</label>
									<input type="text" class="form-control" v-bind:value="tempData.measureUnitId">
								</div>
								<div class="input-group input-group-outline mt-2">
									<label class="form-label">供應商</label>
									<input type="text" class="form-control" v-bind:value="tempData.suppliersId">
								</div>
								<div class="input-group input-group-outline mt-2">
									<label class="form-label">倉庫</label>
									<input type="text" class="form-control" v-bind:value="tempData.warehousesId">
								</div>

								<div class="row">
									<div class="btnState  mt-2 pr-10 col-3">
										<button class="btn bg-gradient-success  mb-0 toast-btn">儲存</button>
										<button class="btn bg-gradient-warning  mb-0 toast-btn" v-on:click="cleanData">清除</button>
									</div>
								</div>

							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts{
	<script>

		let app = new Vue({
			el: '#app',
			data: {
				Source: {
					StockArticleData: [],
					StockGroupsData: [],
					StockImagesData: [],
					StockMeasureUnitsData: [],
					StockSuppliersData: [],
					StockSuppliersGroupsData: [],
					StockWarehouseGroupsData: [],
					StockWarehousesData: [],
				},
				keyWord: "",
				showData: [],
				tempData: [],
			},
			mounted: function () {
				this.StockArticles();
				this.StockGroups();
				this.StockImages();
				this.StockMeasureUnits();
				this.StockSuppliers();
				this.StockSuppliersGroups();
				this.StockWarehouseGroups();
				this.StockWarehouses();
			},
			computed: {

			},
			methods: {
				StockArticles: function () {
					let _this = this;
					axios.get(`/api/StockArticlesApi/GetAll`).then(response => {
						_this.Source.StockArticleData = _this.showData = response.data
					});
				},
				StockGroups: function () {
					let _this = this;
					axios.get(`/api/StockGroupsApi/GetAll`).then(response => {
						_this.Source.StockGroupsData = response.data
					});
				},
				StockImages: function () {
					let _this = this;
					axios.get(`/api/StockImagesApi/GetAll`).then(response => {
						_this.Source.StockImagesData = response.data
					});
				},
				StockMeasureUnits: function () {
					let _this = this;
					axios.get(`/api/StockMeasureUnitsApi/GetAll`).then(response => {
						_this.Source.StockMeasureUnitsData = response.data
					});
				},
				StockSuppliers: function () {
					let _this = this;
					axios.get(`/api/StockSuppliersApi/GetAll`).then(response => {
						_this.Source.StockSuppliersData = response.data
					});
				},
				StockSuppliersGroups: function () {
					let _this = this;
					axios.get(`/api/StockSuppliersGroupsApi/GetAll`).then(response => {
						_this.Source.StockSuppliersGroupsData = response.data
					});
				},
				StockWarehouseGroups: function () {
					let _this = this;
					axios.get(`/api/StockWarehouseGroupsApi/GetAll`).then(response => {
						_this.Source.StockWarehouseGroupsData = response.data
					});
				},
				StockWarehouses: function () {
					let _this = this;
					axios.get(`/api/StockWarehousesApi/GetAll`).then(response => {
						_this.Source.StockWarehousesData = response.data
					});
				},
				// 搜尋產品
				productFilter: function () {
					let _this = this;
					this.showData = this.Source.StockArticleData.filter(data => data.articlesCode.includes(_this.keyWord) || data.articlesDescription.includes(_this.keyWord));
				},
				// 選擇產品
				clickArticle: function (data) {
					this.tempData = data;

				},
				// 清除資料
				cleanData: function () {
					this.tempData = [];
				}
			},
		});
	</script>
    }


