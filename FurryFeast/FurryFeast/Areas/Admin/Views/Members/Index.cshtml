@model IEnumerable<FurryFeast.Models.Member>

@{
    ViewData["Title"] = "Index";
	Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
@section Style{
    <style>
        .unState {
            background-color: gray;
        }

        .btnState {
            display: inline-block;
        }

        .drop {
            background-color: #ffedad;
            color: #3b3b3b;
            box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
        }

            .drop:hover {
                background-color: #ffce78;
            }

        .btn-secondary:hover {
            box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
        }

        input {
            outline-style: none;
            border: 1px solid #ccc;
            border-radius: 6px;
            padding-left: 5px;
            width: 100%;
            height: 30px;
        }

        .h1Header > h4 {
            position: relative;
            padding-bottom: 17px;
        }

            .h1Header > h4:before {
                content: "";
                position: absolute;
                left: 25px;
                bottom: 6px;
                width: 100%;
                height: 4px;
                background: #ccc;
            }
    </style>
}

<div class="container-fluid" id="app">
	<div class="p-0 position-relative mt-n4 mx-3 z-index-2">
		<div class="border-radius-lg pt-4 ">
			<div class="mx-2 h1Header col-7 ">
				<h4 style="display: inline-block;" class="ms-1 m-0">Members</h4><h2 style="display: inline-block;" class="mt-3 mx-2">Index</h2>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-12">
			<div class="my-4" style="background: white; border-radius: 1rem; padding-bottom: 10px; padding: 10px 0px 10px 0px; border: 1px solid rgb(235 235 235);">

				@*				<div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
				<div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3 ">
				<h6 class="text-white text-capitalize ps-3">文章管理</h6>
				</div>
				</div>*@
				<div class="row m-0 p-0">


					@*<div class="dropdown mx-3 mt-2 col-1">
					<button class="btn btn-secondary dropdown-toggle drop" type="button" id="dropdownMenu2" data-bs-toggle="dropdown" aria-expanded="false">
					文章管理
					</button>
					<ul class="dropdown-menu" aria-labelledby="dropdownMenu2">
					<li><button class="dropdown-item" type="button">全部文章</button></li>
					</ul>
					</div>*@
					<div class="form-group m-4 col-2">
						@*新增按鍵*@
						<button type="button" class="btn mb-0 " style="background:lightpink" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
							<a :href="'create'" style="color: white">新增文章</a>

						</button>
					</div>

					@*搜尋欄*@
					<div class="ms-md-auto pe-md-3 d-flex align-items-center col-3 mx-4">
						<div class="input-group input-group-outline">
							<label class="form-label">Search ...</label>
							<input type="text" class="form-control h-100">
						</div>
					</div>

				</div>

				<div class="card-body p-0 pb-2">
					<div class="table-responsive p-0">
						<table class="table align-items-center mb-0">
							<thead>
								<tr>
									<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">文章編號</th>
									<th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">文章標題</th>
									<th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">作者</th>
									<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">上架時間</th>
									<th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7"></th>
								</tr>
							</thead>
							<tbody>
								<tr>
									<template>
										<td class="align-middle text-center">
											<span class="text-secondary text-xs font-weight-bold"></span>
										</td>
										<td>
											<span class="text-secondary text-xs font-weight-bold"></span>
										</td>
										<td>
											<span class="text-secondary text-xs font-weight-bold"></span>
										</td>
										<td class="align-middle text-center text-sm">
											<span class="text-secondary text-xs font-weight-bold"></span>
										</td>
										<td class="text-center pe-3">
											<button class="btn mb-0" style="background: dodgerblue"><a style="color: white;">Active</a></button>
											<button class="btn mb-0" style="background: dodgerblue"><a style="color: white" :href="'Edit?id='">編輯</a></button>
											<button class="btn mb-0 " style="background: crimson; color: white">刪除</button>
										</td>
									</template>
								</tr>

							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<h1>Index</h1>

<table class="table">
	<thead>
	<tr>
		<th>
			@Html.DisplayNameFor(model => model.MemberName)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.MemberBirthday)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.MemberAdress)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.MemberEmail)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.MemberPhone)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.MemberGender)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.MemberAccount)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.MemberPassord)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Active)
		</th>
		<th>
			@Html.DisplayNameFor(model => model.Conpon)
		</th>
		<th></th>
	</tr>
	</thead>
	<tbody>
	@foreach (var item in Model) {
		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.MemberName)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.MemberBirthday)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.MemberAdress)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.MemberEmail)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.MemberPhone)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.MemberGender)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.MemberAccount)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.MemberPassord)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Active)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.Conpon.ConponId)
			</td>
			<td>
				<a asp-action="Edit" asp-route-id="@item.MemberId">Edit</a> |
				<a asp-action="Details" asp-route-id="@item.MemberId">Details</a> |
				<a asp-action="Delete" asp-route-id="@item.MemberId">Delete</a>
			</td>
		</tr>
	}
	</tbody>
</table>

@section Scripts
	{
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>
		var app = new Vue({
			el: '#app',
			data: {
				memberData: []
			},
			mounted: function () {
				let _this = this;
				//_this.getData();

			},
			methods: {
				//getData: function () {
				//	let _this = this;
				//	axios.get('/api/Member/All').then(response => {
				//		_this.memberData = response.data;
				//		console.log(_this.memberData);
				//		let Data = [];

				//		for (let i = 0; i < _this.aticlesData.length; i++) {
				//			let item = _this.aticlesData[i];

				//			if (typeof item !== 'undefined') {
				//				item.OnAndOff = true;
				//				Data.push(item);
				//			} else {
				//				console.warn('Undefined item at index: ', i);
				//			}
				//		}
				//		_this.memberData = Data;
				//	}).catch(error => { console.error(error); });
				//},
				deleteCheck: function (item) {
					let _this = this;
					Swal.fire({
						title: `確定要刪除文章嗎?`,
						icon: 'warning',
						showCancelButton: true,
						confirmButtonColor: '#3085d6',
						cancelButtonColor: '#d33',
						confirmButtonText: '刪除',
						cancelButtonText: '取消'
					}).then((result) => {
						if (result.isConfirmed) {
							_this.deleteAticle(item);
							Swal.fire(
								'Deleted!',
								'Your file has been deleted.',
								'success'
							);
						}
					});
				},
				deleteAticle: function (ID) {
					let _this = this;
					axios.delete(`/api/articles/DeleteAticle/${ID}`).then(response => {
						_this.getData();

					});
				}
			}

		})
	</script>
}
