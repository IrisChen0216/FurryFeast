@{
	ViewData["Title"] = "Index";
}
@section Style{
	<link href="~/css/petclass/bootstrap.min.css" rel="stylesheet" />
	<link href="~/css/petclass/fonts.min.css" rel="stylesheet" />
	<link href="~/css/petclass/style.css" rel="stylesheet" />

	<style>
		a {
			color: black;
		}

		.product {
			box-shadow: 0 0 9px 0 rgba(0, 0, 0, 0.1);
			border-radius: 6px;
			border: solid 2px;
			border-color: antiquewhite;
		}

		.slick-dots {
			position: absolute;
			bottom: 15px;
		}

		.form-input {
			display: inline;
			width: 80%;
		}

		.product-figure {
			min-height: 100px;
		}

		.desktop .product-button-wrap {
			background-color: white;
		}

		.search-product {
			margin-top: -20px;
		}

		.clean {
			background-color: darkgrey;
			border-color: darkgrey;
			margin-top: 0px;
		}

		.sort {
			padding-top: 4px;
			font-size: 15px;
		}

			.sort:hover {
				color: #ffd33b;
			}

		.sortTitle {
			color: #ffd33b;
		}

		.rd-range-wrap{
			padding:5px;
		}
		input[type=range]::-webkit-slider-runnable-track {
			background: #ffd33b;
			border-radius: 10px;
			width: 100%;
			
		}

		input[type=range]::-webkit-slider-thumb {
			background: #ffd33b;
		}

		input[type=range] {
			width: 260px;
			margin-top: 40px;
		}

	</style>
	

}

<div class="container">
	<div class="slider productsTitleSlick">
		<div>
			<img src="~/image/product/home-1.jpg" width="100%" />
		</div>
		<div>
			<img src="~/image/product/bg-cta-1.jpg" />
		@*	<img src="~/image/product/home-bg-1.jpg" width="100%" />*@
		</div>
		<div>
			<img src="~/image/product/home-bg-1.jpg" width="100%" />
		</div>
	</div>
</div>

<div class="container" id="app">
	<div class="row row-50">
		<div class="col-lg-4 col-xl-3">
			@*待固定*@
			<div class="aside row row-30 row-md-50 justify-content-md-between" style="position:sticky;top:100px">

				<div class="aside-item col-12">
					<h6 class="aside-title">商 品 價 格</h6>
					<!-- RD Range-->
					<input type="range" min="1" max="500" v-model="value">
					@*<p>Value: {{ value }}</p>*@
					<div>
						<div class="rd-range-wrap">
							<div class="rd-range-title">Price:</div>
							<div class="rd-range-form-wrap">
								<span>$1</span>
							</div>
							<div class="rd-range-divider"></div>
							<div class="rd-range-form-wrap">
								<span>${{ value }}</span>
							</div>
						</div>
					</div>
					<div class="group-xs group-justify">
						<div>
							<button class="button button-sm button-primary button-zakaria" type="button" v-on:click="ValueSearch">搜尋</button>
							<button class="button button-sm button-primary button-zakaria date-search clean" v-on:click="SearchClean">清除</button>

						</div>
						
					</div>
				</div>

				<div class="aside-item col-sm-6 col-md-5 col-lg-12">
					<h6 class="aside-title">商 品 分 類</h6>
					<ul class="list-shop-filter">
						<li>
							<label class="checkbox-inline">
								<a v-on:click="AllProducts">全部商品</a>
							</label><span class="list-shop-filter-number">({{AllProductsAmount}})</span>
						</li>
						<li>
							<label class="checkbox-inline">
								<a v-on:click="ProductType(3)">鮮食專區</a>
							</label><span class="list-shop-filter-number">({{FreshFoodsAmount}})</span>
						</li>
						<li>
							<label class="checkbox-inline">
								<a v-on:click="ProductType(1)">狗狗專區</a>
							</label><span class="list-shop-filter-number">({{DogProductsAmount}})</span>
						</li>
						<li>
							<label class="checkbox-inline">
								<a v-on:click="ProductType(2)">貓咪專區</a>
							</label><span class="list-shop-filter-number">({{CatProductsAmount}})</span>
						</li>
					</ul>

				</div>
			</div>
		</div>



		<div class="col-lg-8 col-xl-9">
			<div class="row row-30 row-md-50 row-lg-60">
				<div class="col-12">
					<div class="row search-product">
						<!-- 搜尋列-->
						<div class="col col-6">
							@*<form>*@
							@*<h6 class="aside-title">搜尋商品</h6>*@
							<div class="form-wrap">
								<input class="form-input" id="search-form" type="text" name="s" autocomplete="off" v-model="filterObj.keyword" placeholder="Search ...">
								<button class="button-search fl-bigmug-line-search74" type="submit" v-on:click="ProductFilter"></button>
							</div>
							@*</form>*@
						</div>
						<!--排序功能-->
						<div class="col col-6 box-info-modern-title">
							<div>
								<p class="sortTitle">
									上架時間:
									<a class="btn sort" v-on:click="sortBy('time')">由遠至近</a> |
									<a class="btn sort" v-on:click="sortBy('timeLately')">由近至遠</a>
								</p>
							</div>
							<div>
								<p class="sortTitle">
									價格高低:
									<a class="btn sort" v-on:click="sortBy('price')">由低至高</a> |
									<a class="btn sort" v-on:click="sortBy('priceDown')">由高至低</a>
								</p>
							</div>
						</div>

					</div>
					<!-- 商品-->
					<div class="row">


						<div class="col col-3 " v-for="item in ShowPageCount" :key="item.product.productId">
							<article class="product" style="margin-bottom:30px">
								<div class="product-body">
									<div class="product-figure">
										@*<partial name="_ShowPictruePartial" model="@item"></partial>*@

										<img :src="'data:image/png;base64,'+item.pics" alt="" width="200" height="200" />
									</div>
									<h5 class="product-title"><a :href="'/Products/ProductDetailNew?id=' + item.product.productId">{{item.product.productName}}</a></h5>
									<div class="product-price-wrap">
										@*<div class="product-price product-price-old">$@item.ProductPrice</div>*@
										<div class="product-price">${{item.product.productPrice}}</div>
									</div>
								</div>
								@*<span class="product-badge product-badge-sale">Sale</span>*@
								<div class="product-button-wrap">
									<div class="product-button"><a :href="'/Products/ProductDetailNew?id=' + item.product.productId" class="button button-secondary button-zakaria fl-bigmug-line-search74"></a></div>
									<div class="product-button"><a class="button button-secondary button-zakaria fl-bigmug-line-shopping202" v-on:click="AddCart(item.product.productId)"></a></div>
								</div>
							</article>
						</div>


					</div>
				</div>
				<div class="row justify-content-center">
					<paginate :page-count="PageCount"
							  :click-handler="ChangePage"
							  :prev-text="'Prev'"
							  :next-text="'Next'"
							  :page-class="'page-item'"
							  :page-link-class="'page-link'"
							  :prev-class="'page-item'"
							  :prev-link-class="'page-link'"
							  :next-class="'page-item'"
							  :next-link-class="'page-link'"
							  :container-class="'pagination justify-content-center'">
					</paginate>
				</div>
			</div>
		</div>
	</div>
</div>

<div style="height:auto;">
	@*Page @(Model.PageCount<Model.PageNumber?0:Model.PageNumber) of @Model.PageCount
	@Html.PagedListPager(Model,page=>Url.Action("Index",new{page,sortProducts=ViewBag.CurrentSort}))*@
	@*<h6>
	@Html.PagedListPager(Model,page=>Url.Action("Index",new{page}))
	</h6>*@
</div>


@section Scripts{
	<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>



	<script src="https://unpkg.com/vuejs-paginate@0.9.0"></script>
	<link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css" />
	<script src="~/js/product/core.min.js"></script>
	<script src="~/js/product/script.js"></script>
	<script src="~/js/slick.min.js"></script>
	<script>
		Vue.component('paginate', VuejsPaginate);

		let app = new Vue({
			el: '#app',
			props: {
				min: 1,
				max: 1000,
				minDiff: Number,
				start: {
					type: Array,
					default: function () {
						return [1, 1]
					}
				},
				step: 1,
				tooltip: Boolean
			},
			data: {
				products: [],
				showProducts: [],
				originProductType: [],
				maxCount: 12,
				Page: 1,
				filterObj: {
					name: "",
					keyword: "",
				},
				value1: null,
				value2: null,
				value: 50,
			},
			mounted: function () {
				let _this = this;
				_this.AllProducts();
				_this.value1 = _this.start[0];
				_this.value2 = _this.start[1];
			},
			methods: {
				//網頁載入就會掛載全部商品資料的方法
				AllProducts: function () {
					let _this = this;

					axios.get(`/api/products/AllProducts`).then(response => {
						_this.products = _this.showProducts = _this.originProductType = response.data;
					});
				},
				ProductType: function (typeNum) {
					let _this = this;

					axios.get(`/api/products/ProductsType?type=${typeNum}`).then(response => {
						_this.showProducts = _this.originProductType = response.data;
						_this.$nextTick(function () {
							_this.Page = 1;
						});
					});

				},
				AddCart: function (ID) {

					axios.post(`/Cart/CartAdd`, { Id: ID, amount: 1 })
						.then(
							function(response){								
								let data=response.data;
								console.log(data);
								if(data != ""){
									Swal.fire('請先登入');
									window.location.assign(data);
								}
								Swal.fire({
								  position: 'top-end',
								  icon: 'success',
								  title: '成功加入購物車',
								  showConfirmButton: false,
								  timer: 1000,
								  width:'20em'
								});
							}
						);
					//axios({
					//	method:'post',
					//	url: '/Cart/CartAdd',
					//	data: { Id: ID, amount: 1 }
					//}).then(function(res){
					//	console.log(res)
						
					//}).catch(function(error){
					//	console.log(error)
					//});
				},
				ProductFilter: function () {
					//依照搜尋欄位篩選商品
					let _this = this;
					_this.showProducts = _this.showProducts.filter(item => item.product.productName.includes(_this.filterObj.keyword));
					//_this.Page = 1;
				},
				sortBy: function (val) {
					let _this = this;
					//依照時間排序
					if (val == 'time') {
						return _this.showProducts.sort((a, b) => new Date(a.product.productLauchedTime) - new Date(b.product.productLauchedTime));
					}
					if (val == 'timeLately') {
						return _this.showProducts.sort((a, b) => new Date(b.product.productLauchedTime) - new Date(a.product.productLauchedTime));
					}
					//依照價格排序
					if (val == 'price') {
						return _this.showProducts.sort((a, b) => a.product.productPrice - b.product.productPrice);
					}
					if (val == 'priceDown') {
						return _this.showProducts.sort((a, b) => b.product.productPrice - a.product.productPrice);
					}
				},
				ChangePage: function (currentPage) {
					let _this = this;
					_this.Page = currentPage;
				},
				ValueSearch: function () {
					let _this = this;
					_this.showProducts = _this.showProducts.filter(x => x.product.productPrice <= _this.value);
					_this.Page = 1;
				},
				SearchClean: function () {
					let _this = this;
					_this.showProducts = _this.originProductType;
					_this.Page = 1;
				},
			},
			computed: {
				AllProductsAmount: function () {
					let _this = this;
					return _this.products.length;
				},
				DogProductsAmount: function () {
					let _this = this;
					return _this.products.filter((a) => a.type.productypeId == 1).length;
				},
				CatProductsAmount: function () {
					let _this = this;
					return _this.products.filter((a) => a.type.productypeId == 2).length;
				},
				FreshFoodsAmount: function () {
					let _this = this;
					return _this.products.filter((a) => a.type.productypeId == 3).length;
				},
				PageCount: function () {
					let _this = this;
					return Math.ceil(_this.showProducts.length / _this.maxCount);
				},
				ShowPageCount: function () {
					let _this = this;
					let start = (_this.Page - 1) * _this.maxCount;
					let end = _this.Page * _this.maxCount;
					return _this.showProducts.slice(start, end);
				},
			},

		});



		$('.productsTitleSlick').slick({
			dots: true,
			infinite: true,
			speed: 300,
			slidesToShow: 1,
			adaptiveHeight: false,
			autoplay: true
		});
		$(".slick-prev.slick-arrow").text("");
		$(".slick-next.slick-arrow").text("");

	</script>



}
