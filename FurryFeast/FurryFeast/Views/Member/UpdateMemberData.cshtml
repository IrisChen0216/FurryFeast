@{
	ViewData["Title"] = "UpdateMemberData";
}
@section Style{
	<link href="~/css/button.css" rel="stylesheet" />
}

<style>
	.memberTitle {
		padding: 10px;
		font-size: medium;
		font-weight: bold;
	}

	.memberText {
		padding: 10px; font-size: medium;
		border-bottom: 1px dashed #ccc;
		width: 70%;
	}
	.input {
		padding: 10px;
		border: none;
		border-bottom: 1px solid #ccc;
		background: none;
		margin-top: 12px;
	}
</style>

<div class="index-header">
	<h2>修改會員資料</h2>
</div>
<div id="app">
	<div class="row col-6 mx-auto py-4 mb-3" v-for="item in getMemberData" style="border: 1px solid #ccc; border-radius: 6px;">
		<div class="col-4 text-end">
			<p class="memberTitle">姓名</p>
			<p class="memberTitle">性別</p>
			<p class="memberTitle">生日</p>
			<p class="memberTitle">手機號碼</p>
			<p class="memberTitle">Email</p>
			<p class="memberTitle">住址</p>
		</div>
		<div class="col text-start">
			<input class="input" style="margin-top: 0;" type="text" v-model="EditMember.memberName" />
			<div style="padding: 10px; margin-top:12px">
				<input type="radio" name="UpdateGender" :value="1" v-model="EditMember.memberGender"/>
				<label class="me-3">男</label>
				<input type="radio" name="UpdateGender" :value="0" v-model="EditMember.memberGender"/>
				<label>女</label>
			</div>
			<div>
				<input class="input" type="text" />
				<datepicker v-model=" EditMember.memberBirthday"></datepicker>
			</div>
			<input class="input" type="text" name="MemberPhone" maxlength="10" v-model="EditMember.memberPhone" />
			<input class="input" type="email" name="UpdateEmail" v-model="EditMember.memberEmail" />
			<input class="input" type="text" name="MemberAdress" v-model="EditMember.memberAdress" />
		</div>
	</div>
	<div>
		<button class="button button-lg button-primary button-zakaria" type="submit" v-on:click="Update">修改資料</button>
	</div>

	<div class="col-6 mx-auto py-4 my-3" style="border: 1px solid #ccc; border-radius: 6px;">
		<div>
			<label class=" col-4 text-end memberTitle">輸入原密碼</label>
			<input class="input" type="password" v-model="EditPassord.checkPassord" name="checkPassord" />
		</div>
		<div>
			<label class="memberTitle">輸入新密碼</label>
			<input class="input" type="password" name="newPassord" v-model="EditPassord.newPassord" />
		</div>
	</div>
	
	<div>
		<button class="button button-lg button-primary button-zakaria" type="submit" v-on:click="Edit()">更新密碼</button>
	</div>
</div>
<div>
	<form asp-action="Index">
		<button class="button button-lg button-primary button-zakaria">回到上一頁</button>
	</form>
</div>



@section Scripts{

	<script>
		Vue.component('datepicker', {
			template: `<input v-bind:value="value" v-on:input="updateValue($event.target.value)" type="date">`,
			props: ['value'],
			methods: {
				updateValue: function (value) {
					this.$emit('input', value);
				}
			}
		});
		var app = new Vue({
			el: "#app",
			data: {
				getMemberData: "",
				EditMember: {
					memberName: "",
					memberPhone: "",
					memberAdress: "",
					memberGender: 0,
					memberEmail: "",
					memberBirthday: null,

				},
				EditPassord:{
					checkPassord:"",
					newPassord:""
				}

			},
			mounted: function () {
				let self = this;
				axios('/api/member/one').then(res => {
					self.getMemberData = res.data;
					self.getMemberData[0].updatemember.memberBirthday = res.data[0].updatemember.memberBirthday.slice(0, 10);
					self.EditMember.memberName = self.getMemberData[0].updatemember.memberName;
					self.EditMember.memberPhone = self.getMemberData[0].updatemember.memberPhone;
					self.EditMember.memberAdress = self.getMemberData[0].updatemember.memberAdress;
					self.EditMember.memberGender = self.getMemberData[0].updatemember.memberGender;
					self.EditMember.memberEmail = self.getMemberData[0].updatemember.memberEmail;
					self.EditMember.memberBirthday = self.getMemberData[0].updatemember.memberBirthday;
				});
				
			},
			methods: {
				Update: function () {
					let self = this;
					let request = {
						MemberAdress: self.EditMember.memberAdress,
						MemberGender: self.EditMember.memberGender,
						MemberPhone: self.EditMember.memberPhone,
						MemberEmail: self.EditMember.memberEmail,
						MemberName: self.EditMember.memberName,
						MemberBirthday: self.EditMember.memberBirthday
					};
					axios.put('/api/member/edit', request).then(res => {
						//if(res.data == "good"){
							Swal.fire('修改成功')
						//}
						//else{
						//	Swal.fire('修改失敗')
						//}
							//self.EditMember.memberName = "",
							//	self.EditMember.memberPhone = "",
							//	self.EditMember.memberAdress = "",
							//	self.EditMember.memberGender = 0,
							//	self.EditMember.memberEmail = "",
							//	self.EditMember.memberBirthday = new Date().toISOString();
						})
			},
			//Edit: function () {
			//	let self = this;
			//	axios.post('/api/member/edit', self.EditMember).then(res => {
			//		self.EditMember.memberName = "",
			//			self.EditMember.memberPhone = "",
			//			self.EditMember.memberAdress = "",
			//			self.EditMember.memberGender = 0,
			//			self.EditMember.memberEmail = "",
			//			self.EditMember.memberBirthday = new Date().toISOString();
			//	})
			//},
			//EditComfirm: function (item) {
			//	this.EditMember.memberName = item.updatemember.memberName
			//	this.EditMember.memberPhone = item.updatemember.memberPhone
			//	this.EditMember.memberAdress = item.updatemember.memberAdress
			//	this.EditMember.memberGender = item.updatemember.memberGender
			//	this.EditMember.memberEmail = item.updatemember.memberEmail
			//	this.EditMember.memberBirthday = item.updatemember.memberBirthday

			//}
			Edit:function(){
				let self = this;
				let request = {
						checkPassord: self.EditPassord.checkPassord,
						newPassord: self.EditPassord.newPassord
				}
				axios.put('/api/member/editpassord',request).then(res=>{
							Swal.fire('修改成功');

				})
			}

		}
				})
	</script>


}