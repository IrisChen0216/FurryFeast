@model IEnumerable<Order>

@{
	ViewData["Title"] = "MyOrder";
}

@section Style{

	<link href="~/css/animation.css" rel="stylesheet"/>
	<style>
		.title {
			background-color: #ffe607;
			color: black;
		}

		.th { line-height: 1.5; }

		th { color: black; }

		.table-striped > tbody > tr:nth-of-type(odd) {
			--bs-table-accent-bg: #ffd33b6b;
			color: var(--bs-table-striped-color);
		}

		.table > :not(caption) > * > * { border: none; }

		.table { margin: 0px }

		.productTxet {
			border-bottom: 1px dashed #ccc;
			line-height: 4;
		}

		tbody :last-child { border: none; }


		element.style { padding: 5px 10px; }

		tbody :last-child { border: none; }

		element.style { padding: 5px 10px; }

		tbody :last-child { border: none; }

		.button-zakaria.active {
			background: black;
			border: 2px solid black;
			color: white;
		}
	</style>

}

<div class="index-header">
	<h2>我的訂單</h2>
</div>

<div id="app" >
	<template v-if="allMyOrders.length != 0">
		<div class="col-6 p-5 row mx-auto" style="border: 1px solid #ccc; border-radius: 6px;">
			<div>Oops!</div>
			<div>目前沒有訂單資料</div>
		</div>
	</template>
	<template v-else>
		<label>Start:</label>
		<input type="date" v-model="startDate">
		<label>End:</label>
		<input type="date" v-model="endDate">
		<button v-on:click="resetFilter">Reset</button>
		<div>
			<div class="shadow-sm my-5 p-2 pb-0 row mx-auto" style="border: 1px solid #ccc; border-radius: 6px;" v-for="item in filteredOrders.slice(pageStart, pageEnd)" :key="item.orderId">
				<table class="col-8 mx-auto table table-striped " style="margin: 0;">
					<tr class="title th">
						<th class="mx-3">訂單編號</th>
						<th>訂單日期</th>
						<th>訂單出貨日期</th>
						<th>訂單金額</th>
						<th colspan="2">明細</th>

					</tr>
					<tr style="vertical-align: baseline;">
						<td>
							{{item.orderId}}
						</td>
						<td>
							{{format(item.orderCreateDate)}}
						</td>
						<td>
							{{format(item.orderShipDate)}}
						</td>
						<td>
							{{item.orderTotalPrice}}
						</td>
						<td colsapn="2">
							@*{{State}}*@
							<a role="button" class="button button-primary button-zakaria" :class="{active: item.isActive}" style="padding: 5px 10px;" v-on:click="getOrder(item)">訂單明細</a>
							@*{{State}}*@
							<a role="button" data-bs-toggle="collapse" class="m-0 button button-primary button-zakaria" :class="{active: item.isActive}" style="border: 2px solid #ffd33b; padding: 5px 10px;" v-on:click="getOrder(item)">其他</a>
						</td>
					</tr>
				</table>
				<template v-if="item.isCollapsed">
					<div class="my-2 " style="background: white; border: 1px solid #ccc; border-radius: 6px;">
						<table style="width: 100%;">
							<tr style="border-bottom: 1px solid #ccc; line-height: 3;">
								<th>
									商品編號
								</th>
								<th>
									商品名稱
								</th>
								<th>
									商品單價
								</th>
								<th>
									購買數量
								</th>
								<th>
									價格
								</th>
							</tr>
							<tr class="productTxet" v-for="item in Details">
								<td>{{item.productId}}</td>
								<td>{{item.productName}}</td>
								<td>{{item.productPrice}}</td>
								<td>{{item.orderQuantity}}</td>
								<td>{{item.orderQuantity*item.productPrice}}</td>
							</tr>
							<tr style="font-size: larger; font-weight: bolder; line-height: 3;">
								<td></td>
								<td></td>
								<td></td>
								<td st>總金額</td>
								<td>{{totalAmount}}</td>
							</tr>
						</table>
					</div>
				</template>
			</div>
		</div>
	</template>
	<ul class="pagination" v-if="allMyOrders>0">
		<li class="page-item" v-on:click.prevent="setPage(currentPage-1)">
			<a class="page-link" href="#" aria-label="Previous">
				<span aria-hidden="true">&laquo;</span>
			</a>
		</li>
		<li class="page-item" v-for="(n, index) in totalPage" :key="index" v-on:click.prevent="setPage(n)"> <a class="page-link" href="#">{{ n }}</a>
		</li>
		<li class="page-item" v-on:click.prevent="setPage(currentPage+1)">
			<a class="page-link" href="#" aria-label="Next">
				<span aria-hidden="true">&raquo;</span>
			</a>
		</li>
	</ul>
</div>


@section Scripts{
	<link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css"/>
	<script>

		let app = new Vue({
			el: "#app",
			data: {
				orders: [],
				Details: {},
				currentPage: 1,
				perpage: 8,
				startDate: null,
				endDate: null,
				totalAmount:0,
				MemberId:0,
				allMyOrders:[]
			},
			methods: {
				// 篩選功能reset
				resetFilter() {
					this.startDate = null;
					this.endDate = null;
					this.currentPage = 1;
				},

				//取得當前會員id
				getUserId: function () {
					const _this = this;
					axios('/api/recipes/GetUserData').then(response => {
						if (response.status) {
							_this.MemberId = response.data.data.memberId;
						}
						if (_this.MemberId) {
							console.log(_this.MemberId);
						}
					});
				},

				getOrder: function () {
					this.orders.forEach(item => {
						if (item.memberId !== memberID) {
							console.log("1." + item.memberId);
							order.isCollapsed = false;
							order.isActive = false;


						} else {
							console.log("2");
						}
					});
					item.isCollapsed = !item.isCollapsed;
					item.isActive = !item.isActive;
					console.log(item.memberId);

					if (!this.Details[item.orderId]) {
						this.Details = {};
						axios.get(`/api/orders/GetMemberOrder/${item.MemberId}`).then(response => {
							this.$set(this.Details, item.orderId, response.data);
							this.Details = response.data[0].orderDetail;
							console.log(this.Details);
							

							if (this.Details.length > 0) {
								let totalAmount = 0;
								this.Details.forEach(detail => {
									totalAmount += detail.orderQuantity * detail.productPrice;
								});
							} else {
								console.log('您尚未有訂單');
							}

							this.totalAmount = totalAmount;
						});
					}
				},

				//更改時間規格
				format: function(date) {
					return moment(date).format("YYYY-MM-DD HH:mm:ss");
				},
				// 分頁功能 上一頁
				nextPage() {
					if (this.currentPage < this.totalPages) {
						this.currentPage += 1;
					}
				},
				// 分頁功能 下一頁
				previousPage() {
					if (this.currentPage > 1) {
						this.currentPage -= 1;
					}
				},

				// 取得所有的訂單 -> 篩選成會員id的訂單
				getAllData: function () {
					const self = this;

					// 取得當前登入會員的id
					self.getUserId();

					//取得所有的訂單
					axios('/api/MyOrder/GetMyOrder').then(res => {
						self.orders = res.data.map(order => {
							return { 
								...order,
									// 加上兩個屬性(控制明細按鈕)
									isCollapsed: false,
									isActive: false
							};
						});

						// 篩選出與登入會員id相同的訂單
						// id 相同的就塞進陣列裡
						self.orders.forEach(item => {
							if (item.memberId == self.MemberId) {
								item.isCollapsed = false;
								item.isActive = false;

								let tempArr = [];
								tempArr.push(item);

								self.allMyOrders = tempArr;
							} 
						});

						//item.isCollapsed = !item.isCollapsed;
						//item.isActive = !item.isActive;

						})
						.catch(error => {
							console.error(error);
						});
				},

				// 分頁功能
				setPage(page) {
					if (page <= 0 || page > this.totalPage) {
						return;
					}
					this.currentPage = page;
				}
			},
			mounted: function(){
				this.getAllData();
			},
			computed: {
				// 分頁功能
				totalPage() {
					return Math.ceil(this.filteredOrders.length / this.perpage);
				},
				pageStart() {
					return (this.currentPage - 1) * this.perpage;
				},
				pageEnd() {
					return Math.min(this.currentPage * this.perpage, this.filteredOrders.length);
				},
				filteredOrders() {
					if (this.startDate && this.endDate) {
						let start = new Date(this.startDate);
						let end = new Date(this.endDate);
						return this.allMyOrders.filter(order => {
							let orderDate = new Date(order.orderCreateDate);
							return orderDate >= start && orderDate <= end;
						});
					} else {
						return this.allMyOrders;
					}
				}
			}

		});
	</script>
}